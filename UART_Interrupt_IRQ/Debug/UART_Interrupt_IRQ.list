
UART_Interrupt_IRQ.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001138  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000038  080012c8  080012c8  000022c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001300  08001300  0000305c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08001300  08001300  00002300  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001308  08001308  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001308  08001308  00002308  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800130c  0800130c  0000230c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001310  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000305c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0000305c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0000305c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000093f  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000034e  00000000  00000000  000039cb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000118  00000000  00000000  00003d20  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000be  00000000  00000000  00003e38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002d38  00000000  00000000  00003ef6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000142c  00000000  00000000  00006c2e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000098b5  00000000  00000000  0000805a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0001190f  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000afc  00000000  00000000  00011954  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005e  00000000  00000000  00012450  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000005c 	.word	0x2000005c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080012b0 	.word	0x080012b0

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000060 	.word	0x20000060
 80001cc:	080012b0 	.word	0x080012b0

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <main>:
#define USART_IRQNo 39



int main(void)
{
 8000270:	b480      	push	{r7}
 8000272:	b083      	sub	sp, #12
 8000274:	af00      	add	r7, sp, #0
    /* Loop forever */



	uint32_t *pISER1 = (uint32_t*) NVIC_ISER0 ;
 8000276:	4b09      	ldr	r3, [pc, #36]	@ (800029c <main+0x2c>)
 8000278:	607b      	str	r3, [r7, #4]

	*pISER1 |= (1<< (USART_IRQNo % 32));
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	681b      	ldr	r3, [r3, #0]
 800027e:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 8000282:	687b      	ldr	r3, [r7, #4]
 8000284:	601a      	str	r2, [r3, #0]

	uint32_t *pISPR1 = (uint32_t*) NVIC_ISPR0;
 8000286:	4b06      	ldr	r3, [pc, #24]	@ (80002a0 <main+0x30>)
 8000288:	603b      	str	r3, [r7, #0]

		*pISPR1 |= (1<< (USART_IRQNo % 32));
 800028a:	683b      	ldr	r3, [r7, #0]
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 8000292:	683b      	ldr	r3, [r7, #0]
 8000294:	601a      	str	r2, [r3, #0]


	for(;;);
 8000296:	bf00      	nop
 8000298:	e7fd      	b.n	8000296 <main+0x26>
 800029a:	bf00      	nop
 800029c:	e000e104 	.word	0xe000e104
 80002a0:	e000e204 	.word	0xe000e204

080002a4 <USART3_IRQHandler>:
}

void USART3_IRQHandler(void)
{
 80002a4:	b580      	push	{r7, lr}
 80002a6:	af00      	add	r7, sp, #0
	printf("here");
 80002a8:	4802      	ldr	r0, [pc, #8]	@ (80002b4 <USART3_IRQHandler+0x10>)
 80002aa:	f000 f995 	bl	80005d8 <iprintf>


}
 80002ae:	bf00      	nop
 80002b0:	bd80      	pop	{r7, pc}
 80002b2:	bf00      	nop
 80002b4:	080012c8 	.word	0x080012c8

080002b8 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002b8:	b580      	push	{r7, lr}
 80002ba:	b086      	sub	sp, #24
 80002bc:	af00      	add	r7, sp, #0
 80002be:	60f8      	str	r0, [r7, #12]
 80002c0:	60b9      	str	r1, [r7, #8]
 80002c2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002c4:	2300      	movs	r3, #0
 80002c6:	617b      	str	r3, [r7, #20]
 80002c8:	e00a      	b.n	80002e0 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002ca:	f3af 8000 	nop.w
 80002ce:	4601      	mov	r1, r0
 80002d0:	68bb      	ldr	r3, [r7, #8]
 80002d2:	1c5a      	adds	r2, r3, #1
 80002d4:	60ba      	str	r2, [r7, #8]
 80002d6:	b2ca      	uxtb	r2, r1
 80002d8:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002da:	697b      	ldr	r3, [r7, #20]
 80002dc:	3301      	adds	r3, #1
 80002de:	617b      	str	r3, [r7, #20]
 80002e0:	697a      	ldr	r2, [r7, #20]
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	429a      	cmp	r2, r3
 80002e6:	dbf0      	blt.n	80002ca <_read+0x12>
  }

  return len;
 80002e8:	687b      	ldr	r3, [r7, #4]
}
 80002ea:	4618      	mov	r0, r3
 80002ec:	3718      	adds	r7, #24
 80002ee:	46bd      	mov	sp, r7
 80002f0:	bd80      	pop	{r7, pc}

080002f2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80002f2:	b580      	push	{r7, lr}
 80002f4:	b086      	sub	sp, #24
 80002f6:	af00      	add	r7, sp, #0
 80002f8:	60f8      	str	r0, [r7, #12]
 80002fa:	60b9      	str	r1, [r7, #8]
 80002fc:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002fe:	2300      	movs	r3, #0
 8000300:	617b      	str	r3, [r7, #20]
 8000302:	e009      	b.n	8000318 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000304:	68bb      	ldr	r3, [r7, #8]
 8000306:	1c5a      	adds	r2, r3, #1
 8000308:	60ba      	str	r2, [r7, #8]
 800030a:	781b      	ldrb	r3, [r3, #0]
 800030c:	4618      	mov	r0, r3
 800030e:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000312:	697b      	ldr	r3, [r7, #20]
 8000314:	3301      	adds	r3, #1
 8000316:	617b      	str	r3, [r7, #20]
 8000318:	697a      	ldr	r2, [r7, #20]
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	429a      	cmp	r2, r3
 800031e:	dbf1      	blt.n	8000304 <_write+0x12>
  }
  return len;
 8000320:	687b      	ldr	r3, [r7, #4]
}
 8000322:	4618      	mov	r0, r3
 8000324:	3718      	adds	r7, #24
 8000326:	46bd      	mov	sp, r7
 8000328:	bd80      	pop	{r7, pc}

0800032a <_close>:

int _close(int file)
{
 800032a:	b480      	push	{r7}
 800032c:	b083      	sub	sp, #12
 800032e:	af00      	add	r7, sp, #0
 8000330:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000332:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000336:	4618      	mov	r0, r3
 8000338:	370c      	adds	r7, #12
 800033a:	46bd      	mov	sp, r7
 800033c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000340:	4770      	bx	lr

08000342 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000342:	b480      	push	{r7}
 8000344:	b083      	sub	sp, #12
 8000346:	af00      	add	r7, sp, #0
 8000348:	6078      	str	r0, [r7, #4]
 800034a:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800034c:	683b      	ldr	r3, [r7, #0]
 800034e:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000352:	605a      	str	r2, [r3, #4]
  return 0;
 8000354:	2300      	movs	r3, #0
}
 8000356:	4618      	mov	r0, r3
 8000358:	370c      	adds	r7, #12
 800035a:	46bd      	mov	sp, r7
 800035c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000360:	4770      	bx	lr

08000362 <_isatty>:

int _isatty(int file)
{
 8000362:	b480      	push	{r7}
 8000364:	b083      	sub	sp, #12
 8000366:	af00      	add	r7, sp, #0
 8000368:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800036a:	2301      	movs	r3, #1
}
 800036c:	4618      	mov	r0, r3
 800036e:	370c      	adds	r7, #12
 8000370:	46bd      	mov	sp, r7
 8000372:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000376:	4770      	bx	lr

08000378 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000378:	b480      	push	{r7}
 800037a:	b085      	sub	sp, #20
 800037c:	af00      	add	r7, sp, #0
 800037e:	60f8      	str	r0, [r7, #12]
 8000380:	60b9      	str	r1, [r7, #8]
 8000382:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000384:	2300      	movs	r3, #0
}
 8000386:	4618      	mov	r0, r3
 8000388:	3714      	adds	r7, #20
 800038a:	46bd      	mov	sp, r7
 800038c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000390:	4770      	bx	lr
	...

08000394 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000394:	b580      	push	{r7, lr}
 8000396:	b086      	sub	sp, #24
 8000398:	af00      	add	r7, sp, #0
 800039a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800039c:	4a14      	ldr	r2, [pc, #80]	@ (80003f0 <_sbrk+0x5c>)
 800039e:	4b15      	ldr	r3, [pc, #84]	@ (80003f4 <_sbrk+0x60>)
 80003a0:	1ad3      	subs	r3, r2, r3
 80003a2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003a4:	697b      	ldr	r3, [r7, #20]
 80003a6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003a8:	4b13      	ldr	r3, [pc, #76]	@ (80003f8 <_sbrk+0x64>)
 80003aa:	681b      	ldr	r3, [r3, #0]
 80003ac:	2b00      	cmp	r3, #0
 80003ae:	d102      	bne.n	80003b6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003b0:	4b11      	ldr	r3, [pc, #68]	@ (80003f8 <_sbrk+0x64>)
 80003b2:	4a12      	ldr	r2, [pc, #72]	@ (80003fc <_sbrk+0x68>)
 80003b4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003b6:	4b10      	ldr	r3, [pc, #64]	@ (80003f8 <_sbrk+0x64>)
 80003b8:	681a      	ldr	r2, [r3, #0]
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	4413      	add	r3, r2
 80003be:	693a      	ldr	r2, [r7, #16]
 80003c0:	429a      	cmp	r2, r3
 80003c2:	d207      	bcs.n	80003d4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003c4:	f000 f9ac 	bl	8000720 <__errno>
 80003c8:	4603      	mov	r3, r0
 80003ca:	220c      	movs	r2, #12
 80003cc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003ce:	f04f 33ff 	mov.w	r3, #4294967295
 80003d2:	e009      	b.n	80003e8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003d4:	4b08      	ldr	r3, [pc, #32]	@ (80003f8 <_sbrk+0x64>)
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003da:	4b07      	ldr	r3, [pc, #28]	@ (80003f8 <_sbrk+0x64>)
 80003dc:	681a      	ldr	r2, [r3, #0]
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	4413      	add	r3, r2
 80003e2:	4a05      	ldr	r2, [pc, #20]	@ (80003f8 <_sbrk+0x64>)
 80003e4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80003e6:	68fb      	ldr	r3, [r7, #12]
}
 80003e8:	4618      	mov	r0, r3
 80003ea:	3718      	adds	r7, #24
 80003ec:	46bd      	mov	sp, r7
 80003ee:	bd80      	pop	{r7, pc}
 80003f0:	20020000 	.word	0x20020000
 80003f4:	00000400 	.word	0x00000400
 80003f8:	20000078 	.word	0x20000078
 80003fc:	200001c8 	.word	0x200001c8

08000400 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000400:	480d      	ldr	r0, [pc, #52]	@ (8000438 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000402:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000404:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000408:	480c      	ldr	r0, [pc, #48]	@ (800043c <LoopForever+0x6>)
  ldr r1, =_edata
 800040a:	490d      	ldr	r1, [pc, #52]	@ (8000440 <LoopForever+0xa>)
  ldr r2, =_sidata
 800040c:	4a0d      	ldr	r2, [pc, #52]	@ (8000444 <LoopForever+0xe>)
  movs r3, #0
 800040e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000410:	e002      	b.n	8000418 <LoopCopyDataInit>

08000412 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000412:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000414:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000416:	3304      	adds	r3, #4

08000418 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000418:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800041a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800041c:	d3f9      	bcc.n	8000412 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800041e:	4a0a      	ldr	r2, [pc, #40]	@ (8000448 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000420:	4c0a      	ldr	r4, [pc, #40]	@ (800044c <LoopForever+0x16>)
  movs r3, #0
 8000422:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000424:	e001      	b.n	800042a <LoopFillZerobss>

08000426 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000426:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000428:	3204      	adds	r2, #4

0800042a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800042a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800042c:	d3fb      	bcc.n	8000426 <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 800042e:	f000 f97d 	bl	800072c <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 8000432:	f7ff ff1d 	bl	8000270 <main>

08000436 <LoopForever>:

LoopForever:
  b LoopForever
 8000436:	e7fe      	b.n	8000436 <LoopForever>
  ldr   r0, =_estack
 8000438:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800043c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000440:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000444:	08001310 	.word	0x08001310
  ldr r2, =_sbss
 8000448:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 800044c:	200001c8 	.word	0x200001c8

08000450 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000450:	e7fe      	b.n	8000450 <ADC_IRQHandler>
	...

08000454 <std>:
 8000454:	2300      	movs	r3, #0
 8000456:	b510      	push	{r4, lr}
 8000458:	4604      	mov	r4, r0
 800045a:	e9c0 3300 	strd	r3, r3, [r0]
 800045e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000462:	6083      	str	r3, [r0, #8]
 8000464:	8181      	strh	r1, [r0, #12]
 8000466:	6643      	str	r3, [r0, #100]	@ 0x64
 8000468:	81c2      	strh	r2, [r0, #14]
 800046a:	6183      	str	r3, [r0, #24]
 800046c:	4619      	mov	r1, r3
 800046e:	2208      	movs	r2, #8
 8000470:	305c      	adds	r0, #92	@ 0x5c
 8000472:	f000 f906 	bl	8000682 <memset>
 8000476:	4b0d      	ldr	r3, [pc, #52]	@ (80004ac <std+0x58>)
 8000478:	6263      	str	r3, [r4, #36]	@ 0x24
 800047a:	4b0d      	ldr	r3, [pc, #52]	@ (80004b0 <std+0x5c>)
 800047c:	62a3      	str	r3, [r4, #40]	@ 0x28
 800047e:	4b0d      	ldr	r3, [pc, #52]	@ (80004b4 <std+0x60>)
 8000480:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000482:	4b0d      	ldr	r3, [pc, #52]	@ (80004b8 <std+0x64>)
 8000484:	6323      	str	r3, [r4, #48]	@ 0x30
 8000486:	4b0d      	ldr	r3, [pc, #52]	@ (80004bc <std+0x68>)
 8000488:	6224      	str	r4, [r4, #32]
 800048a:	429c      	cmp	r4, r3
 800048c:	d006      	beq.n	800049c <std+0x48>
 800048e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000492:	4294      	cmp	r4, r2
 8000494:	d002      	beq.n	800049c <std+0x48>
 8000496:	33d0      	adds	r3, #208	@ 0xd0
 8000498:	429c      	cmp	r4, r3
 800049a:	d105      	bne.n	80004a8 <std+0x54>
 800049c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80004a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004a4:	f000 b966 	b.w	8000774 <__retarget_lock_init_recursive>
 80004a8:	bd10      	pop	{r4, pc}
 80004aa:	bf00      	nop
 80004ac:	080005fd 	.word	0x080005fd
 80004b0:	0800061f 	.word	0x0800061f
 80004b4:	08000657 	.word	0x08000657
 80004b8:	0800067b 	.word	0x0800067b
 80004bc:	2000007c 	.word	0x2000007c

080004c0 <stdio_exit_handler>:
 80004c0:	4a02      	ldr	r2, [pc, #8]	@ (80004cc <stdio_exit_handler+0xc>)
 80004c2:	4903      	ldr	r1, [pc, #12]	@ (80004d0 <stdio_exit_handler+0x10>)
 80004c4:	4803      	ldr	r0, [pc, #12]	@ (80004d4 <stdio_exit_handler+0x14>)
 80004c6:	f000 b869 	b.w	800059c <_fwalk_sglue>
 80004ca:	bf00      	nop
 80004cc:	20000000 	.word	0x20000000
 80004d0:	08001011 	.word	0x08001011
 80004d4:	20000010 	.word	0x20000010

080004d8 <cleanup_stdio>:
 80004d8:	6841      	ldr	r1, [r0, #4]
 80004da:	4b0c      	ldr	r3, [pc, #48]	@ (800050c <cleanup_stdio+0x34>)
 80004dc:	4299      	cmp	r1, r3
 80004de:	b510      	push	{r4, lr}
 80004e0:	4604      	mov	r4, r0
 80004e2:	d001      	beq.n	80004e8 <cleanup_stdio+0x10>
 80004e4:	f000 fd94 	bl	8001010 <_fflush_r>
 80004e8:	68a1      	ldr	r1, [r4, #8]
 80004ea:	4b09      	ldr	r3, [pc, #36]	@ (8000510 <cleanup_stdio+0x38>)
 80004ec:	4299      	cmp	r1, r3
 80004ee:	d002      	beq.n	80004f6 <cleanup_stdio+0x1e>
 80004f0:	4620      	mov	r0, r4
 80004f2:	f000 fd8d 	bl	8001010 <_fflush_r>
 80004f6:	68e1      	ldr	r1, [r4, #12]
 80004f8:	4b06      	ldr	r3, [pc, #24]	@ (8000514 <cleanup_stdio+0x3c>)
 80004fa:	4299      	cmp	r1, r3
 80004fc:	d004      	beq.n	8000508 <cleanup_stdio+0x30>
 80004fe:	4620      	mov	r0, r4
 8000500:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000504:	f000 bd84 	b.w	8001010 <_fflush_r>
 8000508:	bd10      	pop	{r4, pc}
 800050a:	bf00      	nop
 800050c:	2000007c 	.word	0x2000007c
 8000510:	200000e4 	.word	0x200000e4
 8000514:	2000014c 	.word	0x2000014c

08000518 <global_stdio_init.part.0>:
 8000518:	b510      	push	{r4, lr}
 800051a:	4b0b      	ldr	r3, [pc, #44]	@ (8000548 <global_stdio_init.part.0+0x30>)
 800051c:	4c0b      	ldr	r4, [pc, #44]	@ (800054c <global_stdio_init.part.0+0x34>)
 800051e:	4a0c      	ldr	r2, [pc, #48]	@ (8000550 <global_stdio_init.part.0+0x38>)
 8000520:	601a      	str	r2, [r3, #0]
 8000522:	4620      	mov	r0, r4
 8000524:	2200      	movs	r2, #0
 8000526:	2104      	movs	r1, #4
 8000528:	f7ff ff94 	bl	8000454 <std>
 800052c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000530:	2201      	movs	r2, #1
 8000532:	2109      	movs	r1, #9
 8000534:	f7ff ff8e 	bl	8000454 <std>
 8000538:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800053c:	2202      	movs	r2, #2
 800053e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000542:	2112      	movs	r1, #18
 8000544:	f7ff bf86 	b.w	8000454 <std>
 8000548:	200001b4 	.word	0x200001b4
 800054c:	2000007c 	.word	0x2000007c
 8000550:	080004c1 	.word	0x080004c1

08000554 <__sfp_lock_acquire>:
 8000554:	4801      	ldr	r0, [pc, #4]	@ (800055c <__sfp_lock_acquire+0x8>)
 8000556:	f000 b90e 	b.w	8000776 <__retarget_lock_acquire_recursive>
 800055a:	bf00      	nop
 800055c:	200001bd 	.word	0x200001bd

08000560 <__sfp_lock_release>:
 8000560:	4801      	ldr	r0, [pc, #4]	@ (8000568 <__sfp_lock_release+0x8>)
 8000562:	f000 b909 	b.w	8000778 <__retarget_lock_release_recursive>
 8000566:	bf00      	nop
 8000568:	200001bd 	.word	0x200001bd

0800056c <__sinit>:
 800056c:	b510      	push	{r4, lr}
 800056e:	4604      	mov	r4, r0
 8000570:	f7ff fff0 	bl	8000554 <__sfp_lock_acquire>
 8000574:	6a23      	ldr	r3, [r4, #32]
 8000576:	b11b      	cbz	r3, 8000580 <__sinit+0x14>
 8000578:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800057c:	f7ff bff0 	b.w	8000560 <__sfp_lock_release>
 8000580:	4b04      	ldr	r3, [pc, #16]	@ (8000594 <__sinit+0x28>)
 8000582:	6223      	str	r3, [r4, #32]
 8000584:	4b04      	ldr	r3, [pc, #16]	@ (8000598 <__sinit+0x2c>)
 8000586:	681b      	ldr	r3, [r3, #0]
 8000588:	2b00      	cmp	r3, #0
 800058a:	d1f5      	bne.n	8000578 <__sinit+0xc>
 800058c:	f7ff ffc4 	bl	8000518 <global_stdio_init.part.0>
 8000590:	e7f2      	b.n	8000578 <__sinit+0xc>
 8000592:	bf00      	nop
 8000594:	080004d9 	.word	0x080004d9
 8000598:	200001b4 	.word	0x200001b4

0800059c <_fwalk_sglue>:
 800059c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80005a0:	4607      	mov	r7, r0
 80005a2:	4688      	mov	r8, r1
 80005a4:	4614      	mov	r4, r2
 80005a6:	2600      	movs	r6, #0
 80005a8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80005ac:	f1b9 0901 	subs.w	r9, r9, #1
 80005b0:	d505      	bpl.n	80005be <_fwalk_sglue+0x22>
 80005b2:	6824      	ldr	r4, [r4, #0]
 80005b4:	2c00      	cmp	r4, #0
 80005b6:	d1f7      	bne.n	80005a8 <_fwalk_sglue+0xc>
 80005b8:	4630      	mov	r0, r6
 80005ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80005be:	89ab      	ldrh	r3, [r5, #12]
 80005c0:	2b01      	cmp	r3, #1
 80005c2:	d907      	bls.n	80005d4 <_fwalk_sglue+0x38>
 80005c4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80005c8:	3301      	adds	r3, #1
 80005ca:	d003      	beq.n	80005d4 <_fwalk_sglue+0x38>
 80005cc:	4629      	mov	r1, r5
 80005ce:	4638      	mov	r0, r7
 80005d0:	47c0      	blx	r8
 80005d2:	4306      	orrs	r6, r0
 80005d4:	3568      	adds	r5, #104	@ 0x68
 80005d6:	e7e9      	b.n	80005ac <_fwalk_sglue+0x10>

080005d8 <iprintf>:
 80005d8:	b40f      	push	{r0, r1, r2, r3}
 80005da:	b507      	push	{r0, r1, r2, lr}
 80005dc:	4906      	ldr	r1, [pc, #24]	@ (80005f8 <iprintf+0x20>)
 80005de:	ab04      	add	r3, sp, #16
 80005e0:	6808      	ldr	r0, [r1, #0]
 80005e2:	f853 2b04 	ldr.w	r2, [r3], #4
 80005e6:	6881      	ldr	r1, [r0, #8]
 80005e8:	9301      	str	r3, [sp, #4]
 80005ea:	f000 f9e9 	bl	80009c0 <_vfiprintf_r>
 80005ee:	b003      	add	sp, #12
 80005f0:	f85d eb04 	ldr.w	lr, [sp], #4
 80005f4:	b004      	add	sp, #16
 80005f6:	4770      	bx	lr
 80005f8:	2000000c 	.word	0x2000000c

080005fc <__sread>:
 80005fc:	b510      	push	{r4, lr}
 80005fe:	460c      	mov	r4, r1
 8000600:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000604:	f000 f868 	bl	80006d8 <_read_r>
 8000608:	2800      	cmp	r0, #0
 800060a:	bfab      	itete	ge
 800060c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800060e:	89a3      	ldrhlt	r3, [r4, #12]
 8000610:	181b      	addge	r3, r3, r0
 8000612:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000616:	bfac      	ite	ge
 8000618:	6563      	strge	r3, [r4, #84]	@ 0x54
 800061a:	81a3      	strhlt	r3, [r4, #12]
 800061c:	bd10      	pop	{r4, pc}

0800061e <__swrite>:
 800061e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000622:	461f      	mov	r7, r3
 8000624:	898b      	ldrh	r3, [r1, #12]
 8000626:	05db      	lsls	r3, r3, #23
 8000628:	4605      	mov	r5, r0
 800062a:	460c      	mov	r4, r1
 800062c:	4616      	mov	r6, r2
 800062e:	d505      	bpl.n	800063c <__swrite+0x1e>
 8000630:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000634:	2302      	movs	r3, #2
 8000636:	2200      	movs	r2, #0
 8000638:	f000 f83c 	bl	80006b4 <_lseek_r>
 800063c:	89a3      	ldrh	r3, [r4, #12]
 800063e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000642:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000646:	81a3      	strh	r3, [r4, #12]
 8000648:	4632      	mov	r2, r6
 800064a:	463b      	mov	r3, r7
 800064c:	4628      	mov	r0, r5
 800064e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000652:	f000 b853 	b.w	80006fc <_write_r>

08000656 <__sseek>:
 8000656:	b510      	push	{r4, lr}
 8000658:	460c      	mov	r4, r1
 800065a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800065e:	f000 f829 	bl	80006b4 <_lseek_r>
 8000662:	1c43      	adds	r3, r0, #1
 8000664:	89a3      	ldrh	r3, [r4, #12]
 8000666:	bf15      	itete	ne
 8000668:	6560      	strne	r0, [r4, #84]	@ 0x54
 800066a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800066e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000672:	81a3      	strheq	r3, [r4, #12]
 8000674:	bf18      	it	ne
 8000676:	81a3      	strhne	r3, [r4, #12]
 8000678:	bd10      	pop	{r4, pc}

0800067a <__sclose>:
 800067a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800067e:	f000 b809 	b.w	8000694 <_close_r>

08000682 <memset>:
 8000682:	4402      	add	r2, r0
 8000684:	4603      	mov	r3, r0
 8000686:	4293      	cmp	r3, r2
 8000688:	d100      	bne.n	800068c <memset+0xa>
 800068a:	4770      	bx	lr
 800068c:	f803 1b01 	strb.w	r1, [r3], #1
 8000690:	e7f9      	b.n	8000686 <memset+0x4>
	...

08000694 <_close_r>:
 8000694:	b538      	push	{r3, r4, r5, lr}
 8000696:	4d06      	ldr	r5, [pc, #24]	@ (80006b0 <_close_r+0x1c>)
 8000698:	2300      	movs	r3, #0
 800069a:	4604      	mov	r4, r0
 800069c:	4608      	mov	r0, r1
 800069e:	602b      	str	r3, [r5, #0]
 80006a0:	f7ff fe43 	bl	800032a <_close>
 80006a4:	1c43      	adds	r3, r0, #1
 80006a6:	d102      	bne.n	80006ae <_close_r+0x1a>
 80006a8:	682b      	ldr	r3, [r5, #0]
 80006aa:	b103      	cbz	r3, 80006ae <_close_r+0x1a>
 80006ac:	6023      	str	r3, [r4, #0]
 80006ae:	bd38      	pop	{r3, r4, r5, pc}
 80006b0:	200001b8 	.word	0x200001b8

080006b4 <_lseek_r>:
 80006b4:	b538      	push	{r3, r4, r5, lr}
 80006b6:	4d07      	ldr	r5, [pc, #28]	@ (80006d4 <_lseek_r+0x20>)
 80006b8:	4604      	mov	r4, r0
 80006ba:	4608      	mov	r0, r1
 80006bc:	4611      	mov	r1, r2
 80006be:	2200      	movs	r2, #0
 80006c0:	602a      	str	r2, [r5, #0]
 80006c2:	461a      	mov	r2, r3
 80006c4:	f7ff fe58 	bl	8000378 <_lseek>
 80006c8:	1c43      	adds	r3, r0, #1
 80006ca:	d102      	bne.n	80006d2 <_lseek_r+0x1e>
 80006cc:	682b      	ldr	r3, [r5, #0]
 80006ce:	b103      	cbz	r3, 80006d2 <_lseek_r+0x1e>
 80006d0:	6023      	str	r3, [r4, #0]
 80006d2:	bd38      	pop	{r3, r4, r5, pc}
 80006d4:	200001b8 	.word	0x200001b8

080006d8 <_read_r>:
 80006d8:	b538      	push	{r3, r4, r5, lr}
 80006da:	4d07      	ldr	r5, [pc, #28]	@ (80006f8 <_read_r+0x20>)
 80006dc:	4604      	mov	r4, r0
 80006de:	4608      	mov	r0, r1
 80006e0:	4611      	mov	r1, r2
 80006e2:	2200      	movs	r2, #0
 80006e4:	602a      	str	r2, [r5, #0]
 80006e6:	461a      	mov	r2, r3
 80006e8:	f7ff fde6 	bl	80002b8 <_read>
 80006ec:	1c43      	adds	r3, r0, #1
 80006ee:	d102      	bne.n	80006f6 <_read_r+0x1e>
 80006f0:	682b      	ldr	r3, [r5, #0]
 80006f2:	b103      	cbz	r3, 80006f6 <_read_r+0x1e>
 80006f4:	6023      	str	r3, [r4, #0]
 80006f6:	bd38      	pop	{r3, r4, r5, pc}
 80006f8:	200001b8 	.word	0x200001b8

080006fc <_write_r>:
 80006fc:	b538      	push	{r3, r4, r5, lr}
 80006fe:	4d07      	ldr	r5, [pc, #28]	@ (800071c <_write_r+0x20>)
 8000700:	4604      	mov	r4, r0
 8000702:	4608      	mov	r0, r1
 8000704:	4611      	mov	r1, r2
 8000706:	2200      	movs	r2, #0
 8000708:	602a      	str	r2, [r5, #0]
 800070a:	461a      	mov	r2, r3
 800070c:	f7ff fdf1 	bl	80002f2 <_write>
 8000710:	1c43      	adds	r3, r0, #1
 8000712:	d102      	bne.n	800071a <_write_r+0x1e>
 8000714:	682b      	ldr	r3, [r5, #0]
 8000716:	b103      	cbz	r3, 800071a <_write_r+0x1e>
 8000718:	6023      	str	r3, [r4, #0]
 800071a:	bd38      	pop	{r3, r4, r5, pc}
 800071c:	200001b8 	.word	0x200001b8

08000720 <__errno>:
 8000720:	4b01      	ldr	r3, [pc, #4]	@ (8000728 <__errno+0x8>)
 8000722:	6818      	ldr	r0, [r3, #0]
 8000724:	4770      	bx	lr
 8000726:	bf00      	nop
 8000728:	2000000c 	.word	0x2000000c

0800072c <__libc_init_array>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	4d0d      	ldr	r5, [pc, #52]	@ (8000764 <__libc_init_array+0x38>)
 8000730:	4c0d      	ldr	r4, [pc, #52]	@ (8000768 <__libc_init_array+0x3c>)
 8000732:	1b64      	subs	r4, r4, r5
 8000734:	10a4      	asrs	r4, r4, #2
 8000736:	2600      	movs	r6, #0
 8000738:	42a6      	cmp	r6, r4
 800073a:	d109      	bne.n	8000750 <__libc_init_array+0x24>
 800073c:	4d0b      	ldr	r5, [pc, #44]	@ (800076c <__libc_init_array+0x40>)
 800073e:	4c0c      	ldr	r4, [pc, #48]	@ (8000770 <__libc_init_array+0x44>)
 8000740:	f000 fdb6 	bl	80012b0 <_init>
 8000744:	1b64      	subs	r4, r4, r5
 8000746:	10a4      	asrs	r4, r4, #2
 8000748:	2600      	movs	r6, #0
 800074a:	42a6      	cmp	r6, r4
 800074c:	d105      	bne.n	800075a <__libc_init_array+0x2e>
 800074e:	bd70      	pop	{r4, r5, r6, pc}
 8000750:	f855 3b04 	ldr.w	r3, [r5], #4
 8000754:	4798      	blx	r3
 8000756:	3601      	adds	r6, #1
 8000758:	e7ee      	b.n	8000738 <__libc_init_array+0xc>
 800075a:	f855 3b04 	ldr.w	r3, [r5], #4
 800075e:	4798      	blx	r3
 8000760:	3601      	adds	r6, #1
 8000762:	e7f2      	b.n	800074a <__libc_init_array+0x1e>
 8000764:	08001308 	.word	0x08001308
 8000768:	08001308 	.word	0x08001308
 800076c:	08001308 	.word	0x08001308
 8000770:	0800130c 	.word	0x0800130c

08000774 <__retarget_lock_init_recursive>:
 8000774:	4770      	bx	lr

08000776 <__retarget_lock_acquire_recursive>:
 8000776:	4770      	bx	lr

08000778 <__retarget_lock_release_recursive>:
 8000778:	4770      	bx	lr
	...

0800077c <_free_r>:
 800077c:	b538      	push	{r3, r4, r5, lr}
 800077e:	4605      	mov	r5, r0
 8000780:	2900      	cmp	r1, #0
 8000782:	d041      	beq.n	8000808 <_free_r+0x8c>
 8000784:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000788:	1f0c      	subs	r4, r1, #4
 800078a:	2b00      	cmp	r3, #0
 800078c:	bfb8      	it	lt
 800078e:	18e4      	addlt	r4, r4, r3
 8000790:	f000 f8e0 	bl	8000954 <__malloc_lock>
 8000794:	4a1d      	ldr	r2, [pc, #116]	@ (800080c <_free_r+0x90>)
 8000796:	6813      	ldr	r3, [r2, #0]
 8000798:	b933      	cbnz	r3, 80007a8 <_free_r+0x2c>
 800079a:	6063      	str	r3, [r4, #4]
 800079c:	6014      	str	r4, [r2, #0]
 800079e:	4628      	mov	r0, r5
 80007a0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007a4:	f000 b8dc 	b.w	8000960 <__malloc_unlock>
 80007a8:	42a3      	cmp	r3, r4
 80007aa:	d908      	bls.n	80007be <_free_r+0x42>
 80007ac:	6820      	ldr	r0, [r4, #0]
 80007ae:	1821      	adds	r1, r4, r0
 80007b0:	428b      	cmp	r3, r1
 80007b2:	bf01      	itttt	eq
 80007b4:	6819      	ldreq	r1, [r3, #0]
 80007b6:	685b      	ldreq	r3, [r3, #4]
 80007b8:	1809      	addeq	r1, r1, r0
 80007ba:	6021      	streq	r1, [r4, #0]
 80007bc:	e7ed      	b.n	800079a <_free_r+0x1e>
 80007be:	461a      	mov	r2, r3
 80007c0:	685b      	ldr	r3, [r3, #4]
 80007c2:	b10b      	cbz	r3, 80007c8 <_free_r+0x4c>
 80007c4:	42a3      	cmp	r3, r4
 80007c6:	d9fa      	bls.n	80007be <_free_r+0x42>
 80007c8:	6811      	ldr	r1, [r2, #0]
 80007ca:	1850      	adds	r0, r2, r1
 80007cc:	42a0      	cmp	r0, r4
 80007ce:	d10b      	bne.n	80007e8 <_free_r+0x6c>
 80007d0:	6820      	ldr	r0, [r4, #0]
 80007d2:	4401      	add	r1, r0
 80007d4:	1850      	adds	r0, r2, r1
 80007d6:	4283      	cmp	r3, r0
 80007d8:	6011      	str	r1, [r2, #0]
 80007da:	d1e0      	bne.n	800079e <_free_r+0x22>
 80007dc:	6818      	ldr	r0, [r3, #0]
 80007de:	685b      	ldr	r3, [r3, #4]
 80007e0:	6053      	str	r3, [r2, #4]
 80007e2:	4408      	add	r0, r1
 80007e4:	6010      	str	r0, [r2, #0]
 80007e6:	e7da      	b.n	800079e <_free_r+0x22>
 80007e8:	d902      	bls.n	80007f0 <_free_r+0x74>
 80007ea:	230c      	movs	r3, #12
 80007ec:	602b      	str	r3, [r5, #0]
 80007ee:	e7d6      	b.n	800079e <_free_r+0x22>
 80007f0:	6820      	ldr	r0, [r4, #0]
 80007f2:	1821      	adds	r1, r4, r0
 80007f4:	428b      	cmp	r3, r1
 80007f6:	bf04      	itt	eq
 80007f8:	6819      	ldreq	r1, [r3, #0]
 80007fa:	685b      	ldreq	r3, [r3, #4]
 80007fc:	6063      	str	r3, [r4, #4]
 80007fe:	bf04      	itt	eq
 8000800:	1809      	addeq	r1, r1, r0
 8000802:	6021      	streq	r1, [r4, #0]
 8000804:	6054      	str	r4, [r2, #4]
 8000806:	e7ca      	b.n	800079e <_free_r+0x22>
 8000808:	bd38      	pop	{r3, r4, r5, pc}
 800080a:	bf00      	nop
 800080c:	200001c4 	.word	0x200001c4

08000810 <sbrk_aligned>:
 8000810:	b570      	push	{r4, r5, r6, lr}
 8000812:	4e0f      	ldr	r6, [pc, #60]	@ (8000850 <sbrk_aligned+0x40>)
 8000814:	460c      	mov	r4, r1
 8000816:	6831      	ldr	r1, [r6, #0]
 8000818:	4605      	mov	r5, r0
 800081a:	b911      	cbnz	r1, 8000822 <sbrk_aligned+0x12>
 800081c:	f000 fcb4 	bl	8001188 <_sbrk_r>
 8000820:	6030      	str	r0, [r6, #0]
 8000822:	4621      	mov	r1, r4
 8000824:	4628      	mov	r0, r5
 8000826:	f000 fcaf 	bl	8001188 <_sbrk_r>
 800082a:	1c43      	adds	r3, r0, #1
 800082c:	d103      	bne.n	8000836 <sbrk_aligned+0x26>
 800082e:	f04f 34ff 	mov.w	r4, #4294967295
 8000832:	4620      	mov	r0, r4
 8000834:	bd70      	pop	{r4, r5, r6, pc}
 8000836:	1cc4      	adds	r4, r0, #3
 8000838:	f024 0403 	bic.w	r4, r4, #3
 800083c:	42a0      	cmp	r0, r4
 800083e:	d0f8      	beq.n	8000832 <sbrk_aligned+0x22>
 8000840:	1a21      	subs	r1, r4, r0
 8000842:	4628      	mov	r0, r5
 8000844:	f000 fca0 	bl	8001188 <_sbrk_r>
 8000848:	3001      	adds	r0, #1
 800084a:	d1f2      	bne.n	8000832 <sbrk_aligned+0x22>
 800084c:	e7ef      	b.n	800082e <sbrk_aligned+0x1e>
 800084e:	bf00      	nop
 8000850:	200001c0 	.word	0x200001c0

08000854 <_malloc_r>:
 8000854:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000858:	1ccd      	adds	r5, r1, #3
 800085a:	f025 0503 	bic.w	r5, r5, #3
 800085e:	3508      	adds	r5, #8
 8000860:	2d0c      	cmp	r5, #12
 8000862:	bf38      	it	cc
 8000864:	250c      	movcc	r5, #12
 8000866:	2d00      	cmp	r5, #0
 8000868:	4606      	mov	r6, r0
 800086a:	db01      	blt.n	8000870 <_malloc_r+0x1c>
 800086c:	42a9      	cmp	r1, r5
 800086e:	d904      	bls.n	800087a <_malloc_r+0x26>
 8000870:	230c      	movs	r3, #12
 8000872:	6033      	str	r3, [r6, #0]
 8000874:	2000      	movs	r0, #0
 8000876:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800087a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000950 <_malloc_r+0xfc>
 800087e:	f000 f869 	bl	8000954 <__malloc_lock>
 8000882:	f8d8 3000 	ldr.w	r3, [r8]
 8000886:	461c      	mov	r4, r3
 8000888:	bb44      	cbnz	r4, 80008dc <_malloc_r+0x88>
 800088a:	4629      	mov	r1, r5
 800088c:	4630      	mov	r0, r6
 800088e:	f7ff ffbf 	bl	8000810 <sbrk_aligned>
 8000892:	1c43      	adds	r3, r0, #1
 8000894:	4604      	mov	r4, r0
 8000896:	d158      	bne.n	800094a <_malloc_r+0xf6>
 8000898:	f8d8 4000 	ldr.w	r4, [r8]
 800089c:	4627      	mov	r7, r4
 800089e:	2f00      	cmp	r7, #0
 80008a0:	d143      	bne.n	800092a <_malloc_r+0xd6>
 80008a2:	2c00      	cmp	r4, #0
 80008a4:	d04b      	beq.n	800093e <_malloc_r+0xea>
 80008a6:	6823      	ldr	r3, [r4, #0]
 80008a8:	4639      	mov	r1, r7
 80008aa:	4630      	mov	r0, r6
 80008ac:	eb04 0903 	add.w	r9, r4, r3
 80008b0:	f000 fc6a 	bl	8001188 <_sbrk_r>
 80008b4:	4581      	cmp	r9, r0
 80008b6:	d142      	bne.n	800093e <_malloc_r+0xea>
 80008b8:	6821      	ldr	r1, [r4, #0]
 80008ba:	1a6d      	subs	r5, r5, r1
 80008bc:	4629      	mov	r1, r5
 80008be:	4630      	mov	r0, r6
 80008c0:	f7ff ffa6 	bl	8000810 <sbrk_aligned>
 80008c4:	3001      	adds	r0, #1
 80008c6:	d03a      	beq.n	800093e <_malloc_r+0xea>
 80008c8:	6823      	ldr	r3, [r4, #0]
 80008ca:	442b      	add	r3, r5
 80008cc:	6023      	str	r3, [r4, #0]
 80008ce:	f8d8 3000 	ldr.w	r3, [r8]
 80008d2:	685a      	ldr	r2, [r3, #4]
 80008d4:	bb62      	cbnz	r2, 8000930 <_malloc_r+0xdc>
 80008d6:	f8c8 7000 	str.w	r7, [r8]
 80008da:	e00f      	b.n	80008fc <_malloc_r+0xa8>
 80008dc:	6822      	ldr	r2, [r4, #0]
 80008de:	1b52      	subs	r2, r2, r5
 80008e0:	d420      	bmi.n	8000924 <_malloc_r+0xd0>
 80008e2:	2a0b      	cmp	r2, #11
 80008e4:	d917      	bls.n	8000916 <_malloc_r+0xc2>
 80008e6:	1961      	adds	r1, r4, r5
 80008e8:	42a3      	cmp	r3, r4
 80008ea:	6025      	str	r5, [r4, #0]
 80008ec:	bf18      	it	ne
 80008ee:	6059      	strne	r1, [r3, #4]
 80008f0:	6863      	ldr	r3, [r4, #4]
 80008f2:	bf08      	it	eq
 80008f4:	f8c8 1000 	streq.w	r1, [r8]
 80008f8:	5162      	str	r2, [r4, r5]
 80008fa:	604b      	str	r3, [r1, #4]
 80008fc:	4630      	mov	r0, r6
 80008fe:	f000 f82f 	bl	8000960 <__malloc_unlock>
 8000902:	f104 000b 	add.w	r0, r4, #11
 8000906:	1d23      	adds	r3, r4, #4
 8000908:	f020 0007 	bic.w	r0, r0, #7
 800090c:	1ac2      	subs	r2, r0, r3
 800090e:	bf1c      	itt	ne
 8000910:	1a1b      	subne	r3, r3, r0
 8000912:	50a3      	strne	r3, [r4, r2]
 8000914:	e7af      	b.n	8000876 <_malloc_r+0x22>
 8000916:	6862      	ldr	r2, [r4, #4]
 8000918:	42a3      	cmp	r3, r4
 800091a:	bf0c      	ite	eq
 800091c:	f8c8 2000 	streq.w	r2, [r8]
 8000920:	605a      	strne	r2, [r3, #4]
 8000922:	e7eb      	b.n	80008fc <_malloc_r+0xa8>
 8000924:	4623      	mov	r3, r4
 8000926:	6864      	ldr	r4, [r4, #4]
 8000928:	e7ae      	b.n	8000888 <_malloc_r+0x34>
 800092a:	463c      	mov	r4, r7
 800092c:	687f      	ldr	r7, [r7, #4]
 800092e:	e7b6      	b.n	800089e <_malloc_r+0x4a>
 8000930:	461a      	mov	r2, r3
 8000932:	685b      	ldr	r3, [r3, #4]
 8000934:	42a3      	cmp	r3, r4
 8000936:	d1fb      	bne.n	8000930 <_malloc_r+0xdc>
 8000938:	2300      	movs	r3, #0
 800093a:	6053      	str	r3, [r2, #4]
 800093c:	e7de      	b.n	80008fc <_malloc_r+0xa8>
 800093e:	230c      	movs	r3, #12
 8000940:	6033      	str	r3, [r6, #0]
 8000942:	4630      	mov	r0, r6
 8000944:	f000 f80c 	bl	8000960 <__malloc_unlock>
 8000948:	e794      	b.n	8000874 <_malloc_r+0x20>
 800094a:	6005      	str	r5, [r0, #0]
 800094c:	e7d6      	b.n	80008fc <_malloc_r+0xa8>
 800094e:	bf00      	nop
 8000950:	200001c4 	.word	0x200001c4

08000954 <__malloc_lock>:
 8000954:	4801      	ldr	r0, [pc, #4]	@ (800095c <__malloc_lock+0x8>)
 8000956:	f7ff bf0e 	b.w	8000776 <__retarget_lock_acquire_recursive>
 800095a:	bf00      	nop
 800095c:	200001bc 	.word	0x200001bc

08000960 <__malloc_unlock>:
 8000960:	4801      	ldr	r0, [pc, #4]	@ (8000968 <__malloc_unlock+0x8>)
 8000962:	f7ff bf09 	b.w	8000778 <__retarget_lock_release_recursive>
 8000966:	bf00      	nop
 8000968:	200001bc 	.word	0x200001bc

0800096c <__sfputc_r>:
 800096c:	6893      	ldr	r3, [r2, #8]
 800096e:	3b01      	subs	r3, #1
 8000970:	2b00      	cmp	r3, #0
 8000972:	b410      	push	{r4}
 8000974:	6093      	str	r3, [r2, #8]
 8000976:	da08      	bge.n	800098a <__sfputc_r+0x1e>
 8000978:	6994      	ldr	r4, [r2, #24]
 800097a:	42a3      	cmp	r3, r4
 800097c:	db01      	blt.n	8000982 <__sfputc_r+0x16>
 800097e:	290a      	cmp	r1, #10
 8000980:	d103      	bne.n	800098a <__sfputc_r+0x1e>
 8000982:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000986:	f000 bb6b 	b.w	8001060 <__swbuf_r>
 800098a:	6813      	ldr	r3, [r2, #0]
 800098c:	1c58      	adds	r0, r3, #1
 800098e:	6010      	str	r0, [r2, #0]
 8000990:	7019      	strb	r1, [r3, #0]
 8000992:	4608      	mov	r0, r1
 8000994:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000998:	4770      	bx	lr

0800099a <__sfputs_r>:
 800099a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800099c:	4606      	mov	r6, r0
 800099e:	460f      	mov	r7, r1
 80009a0:	4614      	mov	r4, r2
 80009a2:	18d5      	adds	r5, r2, r3
 80009a4:	42ac      	cmp	r4, r5
 80009a6:	d101      	bne.n	80009ac <__sfputs_r+0x12>
 80009a8:	2000      	movs	r0, #0
 80009aa:	e007      	b.n	80009bc <__sfputs_r+0x22>
 80009ac:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009b0:	463a      	mov	r2, r7
 80009b2:	4630      	mov	r0, r6
 80009b4:	f7ff ffda 	bl	800096c <__sfputc_r>
 80009b8:	1c43      	adds	r3, r0, #1
 80009ba:	d1f3      	bne.n	80009a4 <__sfputs_r+0xa>
 80009bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080009c0 <_vfiprintf_r>:
 80009c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80009c4:	460d      	mov	r5, r1
 80009c6:	b09d      	sub	sp, #116	@ 0x74
 80009c8:	4614      	mov	r4, r2
 80009ca:	4698      	mov	r8, r3
 80009cc:	4606      	mov	r6, r0
 80009ce:	b118      	cbz	r0, 80009d8 <_vfiprintf_r+0x18>
 80009d0:	6a03      	ldr	r3, [r0, #32]
 80009d2:	b90b      	cbnz	r3, 80009d8 <_vfiprintf_r+0x18>
 80009d4:	f7ff fdca 	bl	800056c <__sinit>
 80009d8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80009da:	07d9      	lsls	r1, r3, #31
 80009dc:	d405      	bmi.n	80009ea <_vfiprintf_r+0x2a>
 80009de:	89ab      	ldrh	r3, [r5, #12]
 80009e0:	059a      	lsls	r2, r3, #22
 80009e2:	d402      	bmi.n	80009ea <_vfiprintf_r+0x2a>
 80009e4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80009e6:	f7ff fec6 	bl	8000776 <__retarget_lock_acquire_recursive>
 80009ea:	89ab      	ldrh	r3, [r5, #12]
 80009ec:	071b      	lsls	r3, r3, #28
 80009ee:	d501      	bpl.n	80009f4 <_vfiprintf_r+0x34>
 80009f0:	692b      	ldr	r3, [r5, #16]
 80009f2:	b99b      	cbnz	r3, 8000a1c <_vfiprintf_r+0x5c>
 80009f4:	4629      	mov	r1, r5
 80009f6:	4630      	mov	r0, r6
 80009f8:	f000 fb70 	bl	80010dc <__swsetup_r>
 80009fc:	b170      	cbz	r0, 8000a1c <_vfiprintf_r+0x5c>
 80009fe:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000a00:	07dc      	lsls	r4, r3, #31
 8000a02:	d504      	bpl.n	8000a0e <_vfiprintf_r+0x4e>
 8000a04:	f04f 30ff 	mov.w	r0, #4294967295
 8000a08:	b01d      	add	sp, #116	@ 0x74
 8000a0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a0e:	89ab      	ldrh	r3, [r5, #12]
 8000a10:	0598      	lsls	r0, r3, #22
 8000a12:	d4f7      	bmi.n	8000a04 <_vfiprintf_r+0x44>
 8000a14:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000a16:	f7ff feaf 	bl	8000778 <__retarget_lock_release_recursive>
 8000a1a:	e7f3      	b.n	8000a04 <_vfiprintf_r+0x44>
 8000a1c:	2300      	movs	r3, #0
 8000a1e:	9309      	str	r3, [sp, #36]	@ 0x24
 8000a20:	2320      	movs	r3, #32
 8000a22:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000a26:	f8cd 800c 	str.w	r8, [sp, #12]
 8000a2a:	2330      	movs	r3, #48	@ 0x30
 8000a2c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000bdc <_vfiprintf_r+0x21c>
 8000a30:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000a34:	f04f 0901 	mov.w	r9, #1
 8000a38:	4623      	mov	r3, r4
 8000a3a:	469a      	mov	sl, r3
 8000a3c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a40:	b10a      	cbz	r2, 8000a46 <_vfiprintf_r+0x86>
 8000a42:	2a25      	cmp	r2, #37	@ 0x25
 8000a44:	d1f9      	bne.n	8000a3a <_vfiprintf_r+0x7a>
 8000a46:	ebba 0b04 	subs.w	fp, sl, r4
 8000a4a:	d00b      	beq.n	8000a64 <_vfiprintf_r+0xa4>
 8000a4c:	465b      	mov	r3, fp
 8000a4e:	4622      	mov	r2, r4
 8000a50:	4629      	mov	r1, r5
 8000a52:	4630      	mov	r0, r6
 8000a54:	f7ff ffa1 	bl	800099a <__sfputs_r>
 8000a58:	3001      	adds	r0, #1
 8000a5a:	f000 80a7 	beq.w	8000bac <_vfiprintf_r+0x1ec>
 8000a5e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000a60:	445a      	add	r2, fp
 8000a62:	9209      	str	r2, [sp, #36]	@ 0x24
 8000a64:	f89a 3000 	ldrb.w	r3, [sl]
 8000a68:	2b00      	cmp	r3, #0
 8000a6a:	f000 809f 	beq.w	8000bac <_vfiprintf_r+0x1ec>
 8000a6e:	2300      	movs	r3, #0
 8000a70:	f04f 32ff 	mov.w	r2, #4294967295
 8000a74:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000a78:	f10a 0a01 	add.w	sl, sl, #1
 8000a7c:	9304      	str	r3, [sp, #16]
 8000a7e:	9307      	str	r3, [sp, #28]
 8000a80:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000a84:	931a      	str	r3, [sp, #104]	@ 0x68
 8000a86:	4654      	mov	r4, sl
 8000a88:	2205      	movs	r2, #5
 8000a8a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a8e:	4853      	ldr	r0, [pc, #332]	@ (8000bdc <_vfiprintf_r+0x21c>)
 8000a90:	f7ff fb9e 	bl	80001d0 <memchr>
 8000a94:	9a04      	ldr	r2, [sp, #16]
 8000a96:	b9d8      	cbnz	r0, 8000ad0 <_vfiprintf_r+0x110>
 8000a98:	06d1      	lsls	r1, r2, #27
 8000a9a:	bf44      	itt	mi
 8000a9c:	2320      	movmi	r3, #32
 8000a9e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000aa2:	0713      	lsls	r3, r2, #28
 8000aa4:	bf44      	itt	mi
 8000aa6:	232b      	movmi	r3, #43	@ 0x2b
 8000aa8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000aac:	f89a 3000 	ldrb.w	r3, [sl]
 8000ab0:	2b2a      	cmp	r3, #42	@ 0x2a
 8000ab2:	d015      	beq.n	8000ae0 <_vfiprintf_r+0x120>
 8000ab4:	9a07      	ldr	r2, [sp, #28]
 8000ab6:	4654      	mov	r4, sl
 8000ab8:	2000      	movs	r0, #0
 8000aba:	f04f 0c0a 	mov.w	ip, #10
 8000abe:	4621      	mov	r1, r4
 8000ac0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000ac4:	3b30      	subs	r3, #48	@ 0x30
 8000ac6:	2b09      	cmp	r3, #9
 8000ac8:	d94b      	bls.n	8000b62 <_vfiprintf_r+0x1a2>
 8000aca:	b1b0      	cbz	r0, 8000afa <_vfiprintf_r+0x13a>
 8000acc:	9207      	str	r2, [sp, #28]
 8000ace:	e014      	b.n	8000afa <_vfiprintf_r+0x13a>
 8000ad0:	eba0 0308 	sub.w	r3, r0, r8
 8000ad4:	fa09 f303 	lsl.w	r3, r9, r3
 8000ad8:	4313      	orrs	r3, r2
 8000ada:	9304      	str	r3, [sp, #16]
 8000adc:	46a2      	mov	sl, r4
 8000ade:	e7d2      	b.n	8000a86 <_vfiprintf_r+0xc6>
 8000ae0:	9b03      	ldr	r3, [sp, #12]
 8000ae2:	1d19      	adds	r1, r3, #4
 8000ae4:	681b      	ldr	r3, [r3, #0]
 8000ae6:	9103      	str	r1, [sp, #12]
 8000ae8:	2b00      	cmp	r3, #0
 8000aea:	bfbb      	ittet	lt
 8000aec:	425b      	neglt	r3, r3
 8000aee:	f042 0202 	orrlt.w	r2, r2, #2
 8000af2:	9307      	strge	r3, [sp, #28]
 8000af4:	9307      	strlt	r3, [sp, #28]
 8000af6:	bfb8      	it	lt
 8000af8:	9204      	strlt	r2, [sp, #16]
 8000afa:	7823      	ldrb	r3, [r4, #0]
 8000afc:	2b2e      	cmp	r3, #46	@ 0x2e
 8000afe:	d10a      	bne.n	8000b16 <_vfiprintf_r+0x156>
 8000b00:	7863      	ldrb	r3, [r4, #1]
 8000b02:	2b2a      	cmp	r3, #42	@ 0x2a
 8000b04:	d132      	bne.n	8000b6c <_vfiprintf_r+0x1ac>
 8000b06:	9b03      	ldr	r3, [sp, #12]
 8000b08:	1d1a      	adds	r2, r3, #4
 8000b0a:	681b      	ldr	r3, [r3, #0]
 8000b0c:	9203      	str	r2, [sp, #12]
 8000b0e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000b12:	3402      	adds	r4, #2
 8000b14:	9305      	str	r3, [sp, #20]
 8000b16:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8000bec <_vfiprintf_r+0x22c>
 8000b1a:	7821      	ldrb	r1, [r4, #0]
 8000b1c:	2203      	movs	r2, #3
 8000b1e:	4650      	mov	r0, sl
 8000b20:	f7ff fb56 	bl	80001d0 <memchr>
 8000b24:	b138      	cbz	r0, 8000b36 <_vfiprintf_r+0x176>
 8000b26:	9b04      	ldr	r3, [sp, #16]
 8000b28:	eba0 000a 	sub.w	r0, r0, sl
 8000b2c:	2240      	movs	r2, #64	@ 0x40
 8000b2e:	4082      	lsls	r2, r0
 8000b30:	4313      	orrs	r3, r2
 8000b32:	3401      	adds	r4, #1
 8000b34:	9304      	str	r3, [sp, #16]
 8000b36:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b3a:	4829      	ldr	r0, [pc, #164]	@ (8000be0 <_vfiprintf_r+0x220>)
 8000b3c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000b40:	2206      	movs	r2, #6
 8000b42:	f7ff fb45 	bl	80001d0 <memchr>
 8000b46:	2800      	cmp	r0, #0
 8000b48:	d03f      	beq.n	8000bca <_vfiprintf_r+0x20a>
 8000b4a:	4b26      	ldr	r3, [pc, #152]	@ (8000be4 <_vfiprintf_r+0x224>)
 8000b4c:	bb1b      	cbnz	r3, 8000b96 <_vfiprintf_r+0x1d6>
 8000b4e:	9b03      	ldr	r3, [sp, #12]
 8000b50:	3307      	adds	r3, #7
 8000b52:	f023 0307 	bic.w	r3, r3, #7
 8000b56:	3308      	adds	r3, #8
 8000b58:	9303      	str	r3, [sp, #12]
 8000b5a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000b5c:	443b      	add	r3, r7
 8000b5e:	9309      	str	r3, [sp, #36]	@ 0x24
 8000b60:	e76a      	b.n	8000a38 <_vfiprintf_r+0x78>
 8000b62:	fb0c 3202 	mla	r2, ip, r2, r3
 8000b66:	460c      	mov	r4, r1
 8000b68:	2001      	movs	r0, #1
 8000b6a:	e7a8      	b.n	8000abe <_vfiprintf_r+0xfe>
 8000b6c:	2300      	movs	r3, #0
 8000b6e:	3401      	adds	r4, #1
 8000b70:	9305      	str	r3, [sp, #20]
 8000b72:	4619      	mov	r1, r3
 8000b74:	f04f 0c0a 	mov.w	ip, #10
 8000b78:	4620      	mov	r0, r4
 8000b7a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b7e:	3a30      	subs	r2, #48	@ 0x30
 8000b80:	2a09      	cmp	r2, #9
 8000b82:	d903      	bls.n	8000b8c <_vfiprintf_r+0x1cc>
 8000b84:	2b00      	cmp	r3, #0
 8000b86:	d0c6      	beq.n	8000b16 <_vfiprintf_r+0x156>
 8000b88:	9105      	str	r1, [sp, #20]
 8000b8a:	e7c4      	b.n	8000b16 <_vfiprintf_r+0x156>
 8000b8c:	fb0c 2101 	mla	r1, ip, r1, r2
 8000b90:	4604      	mov	r4, r0
 8000b92:	2301      	movs	r3, #1
 8000b94:	e7f0      	b.n	8000b78 <_vfiprintf_r+0x1b8>
 8000b96:	ab03      	add	r3, sp, #12
 8000b98:	9300      	str	r3, [sp, #0]
 8000b9a:	462a      	mov	r2, r5
 8000b9c:	4b12      	ldr	r3, [pc, #72]	@ (8000be8 <_vfiprintf_r+0x228>)
 8000b9e:	a904      	add	r1, sp, #16
 8000ba0:	4630      	mov	r0, r6
 8000ba2:	f3af 8000 	nop.w
 8000ba6:	4607      	mov	r7, r0
 8000ba8:	1c78      	adds	r0, r7, #1
 8000baa:	d1d6      	bne.n	8000b5a <_vfiprintf_r+0x19a>
 8000bac:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000bae:	07d9      	lsls	r1, r3, #31
 8000bb0:	d405      	bmi.n	8000bbe <_vfiprintf_r+0x1fe>
 8000bb2:	89ab      	ldrh	r3, [r5, #12]
 8000bb4:	059a      	lsls	r2, r3, #22
 8000bb6:	d402      	bmi.n	8000bbe <_vfiprintf_r+0x1fe>
 8000bb8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000bba:	f7ff fddd 	bl	8000778 <__retarget_lock_release_recursive>
 8000bbe:	89ab      	ldrh	r3, [r5, #12]
 8000bc0:	065b      	lsls	r3, r3, #25
 8000bc2:	f53f af1f 	bmi.w	8000a04 <_vfiprintf_r+0x44>
 8000bc6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000bc8:	e71e      	b.n	8000a08 <_vfiprintf_r+0x48>
 8000bca:	ab03      	add	r3, sp, #12
 8000bcc:	9300      	str	r3, [sp, #0]
 8000bce:	462a      	mov	r2, r5
 8000bd0:	4b05      	ldr	r3, [pc, #20]	@ (8000be8 <_vfiprintf_r+0x228>)
 8000bd2:	a904      	add	r1, sp, #16
 8000bd4:	4630      	mov	r0, r6
 8000bd6:	f000 f879 	bl	8000ccc <_printf_i>
 8000bda:	e7e4      	b.n	8000ba6 <_vfiprintf_r+0x1e6>
 8000bdc:	080012cd 	.word	0x080012cd
 8000be0:	080012d7 	.word	0x080012d7
 8000be4:	00000000 	.word	0x00000000
 8000be8:	0800099b 	.word	0x0800099b
 8000bec:	080012d3 	.word	0x080012d3

08000bf0 <_printf_common>:
 8000bf0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bf4:	4616      	mov	r6, r2
 8000bf6:	4698      	mov	r8, r3
 8000bf8:	688a      	ldr	r2, [r1, #8]
 8000bfa:	690b      	ldr	r3, [r1, #16]
 8000bfc:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000c00:	4293      	cmp	r3, r2
 8000c02:	bfb8      	it	lt
 8000c04:	4613      	movlt	r3, r2
 8000c06:	6033      	str	r3, [r6, #0]
 8000c08:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000c0c:	4607      	mov	r7, r0
 8000c0e:	460c      	mov	r4, r1
 8000c10:	b10a      	cbz	r2, 8000c16 <_printf_common+0x26>
 8000c12:	3301      	adds	r3, #1
 8000c14:	6033      	str	r3, [r6, #0]
 8000c16:	6823      	ldr	r3, [r4, #0]
 8000c18:	0699      	lsls	r1, r3, #26
 8000c1a:	bf42      	ittt	mi
 8000c1c:	6833      	ldrmi	r3, [r6, #0]
 8000c1e:	3302      	addmi	r3, #2
 8000c20:	6033      	strmi	r3, [r6, #0]
 8000c22:	6825      	ldr	r5, [r4, #0]
 8000c24:	f015 0506 	ands.w	r5, r5, #6
 8000c28:	d106      	bne.n	8000c38 <_printf_common+0x48>
 8000c2a:	f104 0a19 	add.w	sl, r4, #25
 8000c2e:	68e3      	ldr	r3, [r4, #12]
 8000c30:	6832      	ldr	r2, [r6, #0]
 8000c32:	1a9b      	subs	r3, r3, r2
 8000c34:	42ab      	cmp	r3, r5
 8000c36:	dc26      	bgt.n	8000c86 <_printf_common+0x96>
 8000c38:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000c3c:	6822      	ldr	r2, [r4, #0]
 8000c3e:	3b00      	subs	r3, #0
 8000c40:	bf18      	it	ne
 8000c42:	2301      	movne	r3, #1
 8000c44:	0692      	lsls	r2, r2, #26
 8000c46:	d42b      	bmi.n	8000ca0 <_printf_common+0xb0>
 8000c48:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000c4c:	4641      	mov	r1, r8
 8000c4e:	4638      	mov	r0, r7
 8000c50:	47c8      	blx	r9
 8000c52:	3001      	adds	r0, #1
 8000c54:	d01e      	beq.n	8000c94 <_printf_common+0xa4>
 8000c56:	6823      	ldr	r3, [r4, #0]
 8000c58:	6922      	ldr	r2, [r4, #16]
 8000c5a:	f003 0306 	and.w	r3, r3, #6
 8000c5e:	2b04      	cmp	r3, #4
 8000c60:	bf02      	ittt	eq
 8000c62:	68e5      	ldreq	r5, [r4, #12]
 8000c64:	6833      	ldreq	r3, [r6, #0]
 8000c66:	1aed      	subeq	r5, r5, r3
 8000c68:	68a3      	ldr	r3, [r4, #8]
 8000c6a:	bf0c      	ite	eq
 8000c6c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c70:	2500      	movne	r5, #0
 8000c72:	4293      	cmp	r3, r2
 8000c74:	bfc4      	itt	gt
 8000c76:	1a9b      	subgt	r3, r3, r2
 8000c78:	18ed      	addgt	r5, r5, r3
 8000c7a:	2600      	movs	r6, #0
 8000c7c:	341a      	adds	r4, #26
 8000c7e:	42b5      	cmp	r5, r6
 8000c80:	d11a      	bne.n	8000cb8 <_printf_common+0xc8>
 8000c82:	2000      	movs	r0, #0
 8000c84:	e008      	b.n	8000c98 <_printf_common+0xa8>
 8000c86:	2301      	movs	r3, #1
 8000c88:	4652      	mov	r2, sl
 8000c8a:	4641      	mov	r1, r8
 8000c8c:	4638      	mov	r0, r7
 8000c8e:	47c8      	blx	r9
 8000c90:	3001      	adds	r0, #1
 8000c92:	d103      	bne.n	8000c9c <_printf_common+0xac>
 8000c94:	f04f 30ff 	mov.w	r0, #4294967295
 8000c98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c9c:	3501      	adds	r5, #1
 8000c9e:	e7c6      	b.n	8000c2e <_printf_common+0x3e>
 8000ca0:	18e1      	adds	r1, r4, r3
 8000ca2:	1c5a      	adds	r2, r3, #1
 8000ca4:	2030      	movs	r0, #48	@ 0x30
 8000ca6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000caa:	4422      	add	r2, r4
 8000cac:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000cb0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000cb4:	3302      	adds	r3, #2
 8000cb6:	e7c7      	b.n	8000c48 <_printf_common+0x58>
 8000cb8:	2301      	movs	r3, #1
 8000cba:	4622      	mov	r2, r4
 8000cbc:	4641      	mov	r1, r8
 8000cbe:	4638      	mov	r0, r7
 8000cc0:	47c8      	blx	r9
 8000cc2:	3001      	adds	r0, #1
 8000cc4:	d0e6      	beq.n	8000c94 <_printf_common+0xa4>
 8000cc6:	3601      	adds	r6, #1
 8000cc8:	e7d9      	b.n	8000c7e <_printf_common+0x8e>
	...

08000ccc <_printf_i>:
 8000ccc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000cd0:	7e0f      	ldrb	r7, [r1, #24]
 8000cd2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000cd4:	2f78      	cmp	r7, #120	@ 0x78
 8000cd6:	4691      	mov	r9, r2
 8000cd8:	4680      	mov	r8, r0
 8000cda:	460c      	mov	r4, r1
 8000cdc:	469a      	mov	sl, r3
 8000cde:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000ce2:	d807      	bhi.n	8000cf4 <_printf_i+0x28>
 8000ce4:	2f62      	cmp	r7, #98	@ 0x62
 8000ce6:	d80a      	bhi.n	8000cfe <_printf_i+0x32>
 8000ce8:	2f00      	cmp	r7, #0
 8000cea:	f000 80d1 	beq.w	8000e90 <_printf_i+0x1c4>
 8000cee:	2f58      	cmp	r7, #88	@ 0x58
 8000cf0:	f000 80b8 	beq.w	8000e64 <_printf_i+0x198>
 8000cf4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000cf8:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000cfc:	e03a      	b.n	8000d74 <_printf_i+0xa8>
 8000cfe:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000d02:	2b15      	cmp	r3, #21
 8000d04:	d8f6      	bhi.n	8000cf4 <_printf_i+0x28>
 8000d06:	a101      	add	r1, pc, #4	@ (adr r1, 8000d0c <_printf_i+0x40>)
 8000d08:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000d0c:	08000d65 	.word	0x08000d65
 8000d10:	08000d79 	.word	0x08000d79
 8000d14:	08000cf5 	.word	0x08000cf5
 8000d18:	08000cf5 	.word	0x08000cf5
 8000d1c:	08000cf5 	.word	0x08000cf5
 8000d20:	08000cf5 	.word	0x08000cf5
 8000d24:	08000d79 	.word	0x08000d79
 8000d28:	08000cf5 	.word	0x08000cf5
 8000d2c:	08000cf5 	.word	0x08000cf5
 8000d30:	08000cf5 	.word	0x08000cf5
 8000d34:	08000cf5 	.word	0x08000cf5
 8000d38:	08000e77 	.word	0x08000e77
 8000d3c:	08000da3 	.word	0x08000da3
 8000d40:	08000e31 	.word	0x08000e31
 8000d44:	08000cf5 	.word	0x08000cf5
 8000d48:	08000cf5 	.word	0x08000cf5
 8000d4c:	08000e99 	.word	0x08000e99
 8000d50:	08000cf5 	.word	0x08000cf5
 8000d54:	08000da3 	.word	0x08000da3
 8000d58:	08000cf5 	.word	0x08000cf5
 8000d5c:	08000cf5 	.word	0x08000cf5
 8000d60:	08000e39 	.word	0x08000e39
 8000d64:	6833      	ldr	r3, [r6, #0]
 8000d66:	1d1a      	adds	r2, r3, #4
 8000d68:	681b      	ldr	r3, [r3, #0]
 8000d6a:	6032      	str	r2, [r6, #0]
 8000d6c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000d70:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000d74:	2301      	movs	r3, #1
 8000d76:	e09c      	b.n	8000eb2 <_printf_i+0x1e6>
 8000d78:	6833      	ldr	r3, [r6, #0]
 8000d7a:	6820      	ldr	r0, [r4, #0]
 8000d7c:	1d19      	adds	r1, r3, #4
 8000d7e:	6031      	str	r1, [r6, #0]
 8000d80:	0606      	lsls	r6, r0, #24
 8000d82:	d501      	bpl.n	8000d88 <_printf_i+0xbc>
 8000d84:	681d      	ldr	r5, [r3, #0]
 8000d86:	e003      	b.n	8000d90 <_printf_i+0xc4>
 8000d88:	0645      	lsls	r5, r0, #25
 8000d8a:	d5fb      	bpl.n	8000d84 <_printf_i+0xb8>
 8000d8c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000d90:	2d00      	cmp	r5, #0
 8000d92:	da03      	bge.n	8000d9c <_printf_i+0xd0>
 8000d94:	232d      	movs	r3, #45	@ 0x2d
 8000d96:	426d      	negs	r5, r5
 8000d98:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000d9c:	4858      	ldr	r0, [pc, #352]	@ (8000f00 <_printf_i+0x234>)
 8000d9e:	230a      	movs	r3, #10
 8000da0:	e011      	b.n	8000dc6 <_printf_i+0xfa>
 8000da2:	6821      	ldr	r1, [r4, #0]
 8000da4:	6833      	ldr	r3, [r6, #0]
 8000da6:	0608      	lsls	r0, r1, #24
 8000da8:	f853 5b04 	ldr.w	r5, [r3], #4
 8000dac:	d402      	bmi.n	8000db4 <_printf_i+0xe8>
 8000dae:	0649      	lsls	r1, r1, #25
 8000db0:	bf48      	it	mi
 8000db2:	b2ad      	uxthmi	r5, r5
 8000db4:	2f6f      	cmp	r7, #111	@ 0x6f
 8000db6:	4852      	ldr	r0, [pc, #328]	@ (8000f00 <_printf_i+0x234>)
 8000db8:	6033      	str	r3, [r6, #0]
 8000dba:	bf14      	ite	ne
 8000dbc:	230a      	movne	r3, #10
 8000dbe:	2308      	moveq	r3, #8
 8000dc0:	2100      	movs	r1, #0
 8000dc2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000dc6:	6866      	ldr	r6, [r4, #4]
 8000dc8:	60a6      	str	r6, [r4, #8]
 8000dca:	2e00      	cmp	r6, #0
 8000dcc:	db05      	blt.n	8000dda <_printf_i+0x10e>
 8000dce:	6821      	ldr	r1, [r4, #0]
 8000dd0:	432e      	orrs	r6, r5
 8000dd2:	f021 0104 	bic.w	r1, r1, #4
 8000dd6:	6021      	str	r1, [r4, #0]
 8000dd8:	d04b      	beq.n	8000e72 <_printf_i+0x1a6>
 8000dda:	4616      	mov	r6, r2
 8000ddc:	fbb5 f1f3 	udiv	r1, r5, r3
 8000de0:	fb03 5711 	mls	r7, r3, r1, r5
 8000de4:	5dc7      	ldrb	r7, [r0, r7]
 8000de6:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000dea:	462f      	mov	r7, r5
 8000dec:	42bb      	cmp	r3, r7
 8000dee:	460d      	mov	r5, r1
 8000df0:	d9f4      	bls.n	8000ddc <_printf_i+0x110>
 8000df2:	2b08      	cmp	r3, #8
 8000df4:	d10b      	bne.n	8000e0e <_printf_i+0x142>
 8000df6:	6823      	ldr	r3, [r4, #0]
 8000df8:	07df      	lsls	r7, r3, #31
 8000dfa:	d508      	bpl.n	8000e0e <_printf_i+0x142>
 8000dfc:	6923      	ldr	r3, [r4, #16]
 8000dfe:	6861      	ldr	r1, [r4, #4]
 8000e00:	4299      	cmp	r1, r3
 8000e02:	bfde      	ittt	le
 8000e04:	2330      	movle	r3, #48	@ 0x30
 8000e06:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000e0a:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000e0e:	1b92      	subs	r2, r2, r6
 8000e10:	6122      	str	r2, [r4, #16]
 8000e12:	f8cd a000 	str.w	sl, [sp]
 8000e16:	464b      	mov	r3, r9
 8000e18:	aa03      	add	r2, sp, #12
 8000e1a:	4621      	mov	r1, r4
 8000e1c:	4640      	mov	r0, r8
 8000e1e:	f7ff fee7 	bl	8000bf0 <_printf_common>
 8000e22:	3001      	adds	r0, #1
 8000e24:	d14a      	bne.n	8000ebc <_printf_i+0x1f0>
 8000e26:	f04f 30ff 	mov.w	r0, #4294967295
 8000e2a:	b004      	add	sp, #16
 8000e2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e30:	6823      	ldr	r3, [r4, #0]
 8000e32:	f043 0320 	orr.w	r3, r3, #32
 8000e36:	6023      	str	r3, [r4, #0]
 8000e38:	4832      	ldr	r0, [pc, #200]	@ (8000f04 <_printf_i+0x238>)
 8000e3a:	2778      	movs	r7, #120	@ 0x78
 8000e3c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000e40:	6823      	ldr	r3, [r4, #0]
 8000e42:	6831      	ldr	r1, [r6, #0]
 8000e44:	061f      	lsls	r7, r3, #24
 8000e46:	f851 5b04 	ldr.w	r5, [r1], #4
 8000e4a:	d402      	bmi.n	8000e52 <_printf_i+0x186>
 8000e4c:	065f      	lsls	r7, r3, #25
 8000e4e:	bf48      	it	mi
 8000e50:	b2ad      	uxthmi	r5, r5
 8000e52:	6031      	str	r1, [r6, #0]
 8000e54:	07d9      	lsls	r1, r3, #31
 8000e56:	bf44      	itt	mi
 8000e58:	f043 0320 	orrmi.w	r3, r3, #32
 8000e5c:	6023      	strmi	r3, [r4, #0]
 8000e5e:	b11d      	cbz	r5, 8000e68 <_printf_i+0x19c>
 8000e60:	2310      	movs	r3, #16
 8000e62:	e7ad      	b.n	8000dc0 <_printf_i+0xf4>
 8000e64:	4826      	ldr	r0, [pc, #152]	@ (8000f00 <_printf_i+0x234>)
 8000e66:	e7e9      	b.n	8000e3c <_printf_i+0x170>
 8000e68:	6823      	ldr	r3, [r4, #0]
 8000e6a:	f023 0320 	bic.w	r3, r3, #32
 8000e6e:	6023      	str	r3, [r4, #0]
 8000e70:	e7f6      	b.n	8000e60 <_printf_i+0x194>
 8000e72:	4616      	mov	r6, r2
 8000e74:	e7bd      	b.n	8000df2 <_printf_i+0x126>
 8000e76:	6833      	ldr	r3, [r6, #0]
 8000e78:	6825      	ldr	r5, [r4, #0]
 8000e7a:	6961      	ldr	r1, [r4, #20]
 8000e7c:	1d18      	adds	r0, r3, #4
 8000e7e:	6030      	str	r0, [r6, #0]
 8000e80:	062e      	lsls	r6, r5, #24
 8000e82:	681b      	ldr	r3, [r3, #0]
 8000e84:	d501      	bpl.n	8000e8a <_printf_i+0x1be>
 8000e86:	6019      	str	r1, [r3, #0]
 8000e88:	e002      	b.n	8000e90 <_printf_i+0x1c4>
 8000e8a:	0668      	lsls	r0, r5, #25
 8000e8c:	d5fb      	bpl.n	8000e86 <_printf_i+0x1ba>
 8000e8e:	8019      	strh	r1, [r3, #0]
 8000e90:	2300      	movs	r3, #0
 8000e92:	6123      	str	r3, [r4, #16]
 8000e94:	4616      	mov	r6, r2
 8000e96:	e7bc      	b.n	8000e12 <_printf_i+0x146>
 8000e98:	6833      	ldr	r3, [r6, #0]
 8000e9a:	1d1a      	adds	r2, r3, #4
 8000e9c:	6032      	str	r2, [r6, #0]
 8000e9e:	681e      	ldr	r6, [r3, #0]
 8000ea0:	6862      	ldr	r2, [r4, #4]
 8000ea2:	2100      	movs	r1, #0
 8000ea4:	4630      	mov	r0, r6
 8000ea6:	f7ff f993 	bl	80001d0 <memchr>
 8000eaa:	b108      	cbz	r0, 8000eb0 <_printf_i+0x1e4>
 8000eac:	1b80      	subs	r0, r0, r6
 8000eae:	6060      	str	r0, [r4, #4]
 8000eb0:	6863      	ldr	r3, [r4, #4]
 8000eb2:	6123      	str	r3, [r4, #16]
 8000eb4:	2300      	movs	r3, #0
 8000eb6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000eba:	e7aa      	b.n	8000e12 <_printf_i+0x146>
 8000ebc:	6923      	ldr	r3, [r4, #16]
 8000ebe:	4632      	mov	r2, r6
 8000ec0:	4649      	mov	r1, r9
 8000ec2:	4640      	mov	r0, r8
 8000ec4:	47d0      	blx	sl
 8000ec6:	3001      	adds	r0, #1
 8000ec8:	d0ad      	beq.n	8000e26 <_printf_i+0x15a>
 8000eca:	6823      	ldr	r3, [r4, #0]
 8000ecc:	079b      	lsls	r3, r3, #30
 8000ece:	d413      	bmi.n	8000ef8 <_printf_i+0x22c>
 8000ed0:	68e0      	ldr	r0, [r4, #12]
 8000ed2:	9b03      	ldr	r3, [sp, #12]
 8000ed4:	4298      	cmp	r0, r3
 8000ed6:	bfb8      	it	lt
 8000ed8:	4618      	movlt	r0, r3
 8000eda:	e7a6      	b.n	8000e2a <_printf_i+0x15e>
 8000edc:	2301      	movs	r3, #1
 8000ede:	4632      	mov	r2, r6
 8000ee0:	4649      	mov	r1, r9
 8000ee2:	4640      	mov	r0, r8
 8000ee4:	47d0      	blx	sl
 8000ee6:	3001      	adds	r0, #1
 8000ee8:	d09d      	beq.n	8000e26 <_printf_i+0x15a>
 8000eea:	3501      	adds	r5, #1
 8000eec:	68e3      	ldr	r3, [r4, #12]
 8000eee:	9903      	ldr	r1, [sp, #12]
 8000ef0:	1a5b      	subs	r3, r3, r1
 8000ef2:	42ab      	cmp	r3, r5
 8000ef4:	dcf2      	bgt.n	8000edc <_printf_i+0x210>
 8000ef6:	e7eb      	b.n	8000ed0 <_printf_i+0x204>
 8000ef8:	2500      	movs	r5, #0
 8000efa:	f104 0619 	add.w	r6, r4, #25
 8000efe:	e7f5      	b.n	8000eec <_printf_i+0x220>
 8000f00:	080012de 	.word	0x080012de
 8000f04:	080012ef 	.word	0x080012ef

08000f08 <__sflush_r>:
 8000f08:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000f0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f10:	0716      	lsls	r6, r2, #28
 8000f12:	4605      	mov	r5, r0
 8000f14:	460c      	mov	r4, r1
 8000f16:	d454      	bmi.n	8000fc2 <__sflush_r+0xba>
 8000f18:	684b      	ldr	r3, [r1, #4]
 8000f1a:	2b00      	cmp	r3, #0
 8000f1c:	dc02      	bgt.n	8000f24 <__sflush_r+0x1c>
 8000f1e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000f20:	2b00      	cmp	r3, #0
 8000f22:	dd48      	ble.n	8000fb6 <__sflush_r+0xae>
 8000f24:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000f26:	2e00      	cmp	r6, #0
 8000f28:	d045      	beq.n	8000fb6 <__sflush_r+0xae>
 8000f2a:	2300      	movs	r3, #0
 8000f2c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000f30:	682f      	ldr	r7, [r5, #0]
 8000f32:	6a21      	ldr	r1, [r4, #32]
 8000f34:	602b      	str	r3, [r5, #0]
 8000f36:	d030      	beq.n	8000f9a <__sflush_r+0x92>
 8000f38:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000f3a:	89a3      	ldrh	r3, [r4, #12]
 8000f3c:	0759      	lsls	r1, r3, #29
 8000f3e:	d505      	bpl.n	8000f4c <__sflush_r+0x44>
 8000f40:	6863      	ldr	r3, [r4, #4]
 8000f42:	1ad2      	subs	r2, r2, r3
 8000f44:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000f46:	b10b      	cbz	r3, 8000f4c <__sflush_r+0x44>
 8000f48:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000f4a:	1ad2      	subs	r2, r2, r3
 8000f4c:	2300      	movs	r3, #0
 8000f4e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000f50:	6a21      	ldr	r1, [r4, #32]
 8000f52:	4628      	mov	r0, r5
 8000f54:	47b0      	blx	r6
 8000f56:	1c43      	adds	r3, r0, #1
 8000f58:	89a3      	ldrh	r3, [r4, #12]
 8000f5a:	d106      	bne.n	8000f6a <__sflush_r+0x62>
 8000f5c:	6829      	ldr	r1, [r5, #0]
 8000f5e:	291d      	cmp	r1, #29
 8000f60:	d82b      	bhi.n	8000fba <__sflush_r+0xb2>
 8000f62:	4a2a      	ldr	r2, [pc, #168]	@ (800100c <__sflush_r+0x104>)
 8000f64:	40ca      	lsrs	r2, r1
 8000f66:	07d6      	lsls	r6, r2, #31
 8000f68:	d527      	bpl.n	8000fba <__sflush_r+0xb2>
 8000f6a:	2200      	movs	r2, #0
 8000f6c:	6062      	str	r2, [r4, #4]
 8000f6e:	04d9      	lsls	r1, r3, #19
 8000f70:	6922      	ldr	r2, [r4, #16]
 8000f72:	6022      	str	r2, [r4, #0]
 8000f74:	d504      	bpl.n	8000f80 <__sflush_r+0x78>
 8000f76:	1c42      	adds	r2, r0, #1
 8000f78:	d101      	bne.n	8000f7e <__sflush_r+0x76>
 8000f7a:	682b      	ldr	r3, [r5, #0]
 8000f7c:	b903      	cbnz	r3, 8000f80 <__sflush_r+0x78>
 8000f7e:	6560      	str	r0, [r4, #84]	@ 0x54
 8000f80:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000f82:	602f      	str	r7, [r5, #0]
 8000f84:	b1b9      	cbz	r1, 8000fb6 <__sflush_r+0xae>
 8000f86:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000f8a:	4299      	cmp	r1, r3
 8000f8c:	d002      	beq.n	8000f94 <__sflush_r+0x8c>
 8000f8e:	4628      	mov	r0, r5
 8000f90:	f7ff fbf4 	bl	800077c <_free_r>
 8000f94:	2300      	movs	r3, #0
 8000f96:	6363      	str	r3, [r4, #52]	@ 0x34
 8000f98:	e00d      	b.n	8000fb6 <__sflush_r+0xae>
 8000f9a:	2301      	movs	r3, #1
 8000f9c:	4628      	mov	r0, r5
 8000f9e:	47b0      	blx	r6
 8000fa0:	4602      	mov	r2, r0
 8000fa2:	1c50      	adds	r0, r2, #1
 8000fa4:	d1c9      	bne.n	8000f3a <__sflush_r+0x32>
 8000fa6:	682b      	ldr	r3, [r5, #0]
 8000fa8:	2b00      	cmp	r3, #0
 8000faa:	d0c6      	beq.n	8000f3a <__sflush_r+0x32>
 8000fac:	2b1d      	cmp	r3, #29
 8000fae:	d001      	beq.n	8000fb4 <__sflush_r+0xac>
 8000fb0:	2b16      	cmp	r3, #22
 8000fb2:	d11e      	bne.n	8000ff2 <__sflush_r+0xea>
 8000fb4:	602f      	str	r7, [r5, #0]
 8000fb6:	2000      	movs	r0, #0
 8000fb8:	e022      	b.n	8001000 <__sflush_r+0xf8>
 8000fba:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000fbe:	b21b      	sxth	r3, r3
 8000fc0:	e01b      	b.n	8000ffa <__sflush_r+0xf2>
 8000fc2:	690f      	ldr	r7, [r1, #16]
 8000fc4:	2f00      	cmp	r7, #0
 8000fc6:	d0f6      	beq.n	8000fb6 <__sflush_r+0xae>
 8000fc8:	0793      	lsls	r3, r2, #30
 8000fca:	680e      	ldr	r6, [r1, #0]
 8000fcc:	bf08      	it	eq
 8000fce:	694b      	ldreq	r3, [r1, #20]
 8000fd0:	600f      	str	r7, [r1, #0]
 8000fd2:	bf18      	it	ne
 8000fd4:	2300      	movne	r3, #0
 8000fd6:	eba6 0807 	sub.w	r8, r6, r7
 8000fda:	608b      	str	r3, [r1, #8]
 8000fdc:	f1b8 0f00 	cmp.w	r8, #0
 8000fe0:	dde9      	ble.n	8000fb6 <__sflush_r+0xae>
 8000fe2:	6a21      	ldr	r1, [r4, #32]
 8000fe4:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8000fe6:	4643      	mov	r3, r8
 8000fe8:	463a      	mov	r2, r7
 8000fea:	4628      	mov	r0, r5
 8000fec:	47b0      	blx	r6
 8000fee:	2800      	cmp	r0, #0
 8000ff0:	dc08      	bgt.n	8001004 <__sflush_r+0xfc>
 8000ff2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000ff6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000ffa:	81a3      	strh	r3, [r4, #12]
 8000ffc:	f04f 30ff 	mov.w	r0, #4294967295
 8001000:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001004:	4407      	add	r7, r0
 8001006:	eba8 0800 	sub.w	r8, r8, r0
 800100a:	e7e7      	b.n	8000fdc <__sflush_r+0xd4>
 800100c:	20400001 	.word	0x20400001

08001010 <_fflush_r>:
 8001010:	b538      	push	{r3, r4, r5, lr}
 8001012:	690b      	ldr	r3, [r1, #16]
 8001014:	4605      	mov	r5, r0
 8001016:	460c      	mov	r4, r1
 8001018:	b913      	cbnz	r3, 8001020 <_fflush_r+0x10>
 800101a:	2500      	movs	r5, #0
 800101c:	4628      	mov	r0, r5
 800101e:	bd38      	pop	{r3, r4, r5, pc}
 8001020:	b118      	cbz	r0, 800102a <_fflush_r+0x1a>
 8001022:	6a03      	ldr	r3, [r0, #32]
 8001024:	b90b      	cbnz	r3, 800102a <_fflush_r+0x1a>
 8001026:	f7ff faa1 	bl	800056c <__sinit>
 800102a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800102e:	2b00      	cmp	r3, #0
 8001030:	d0f3      	beq.n	800101a <_fflush_r+0xa>
 8001032:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001034:	07d0      	lsls	r0, r2, #31
 8001036:	d404      	bmi.n	8001042 <_fflush_r+0x32>
 8001038:	0599      	lsls	r1, r3, #22
 800103a:	d402      	bmi.n	8001042 <_fflush_r+0x32>
 800103c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800103e:	f7ff fb9a 	bl	8000776 <__retarget_lock_acquire_recursive>
 8001042:	4628      	mov	r0, r5
 8001044:	4621      	mov	r1, r4
 8001046:	f7ff ff5f 	bl	8000f08 <__sflush_r>
 800104a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800104c:	07da      	lsls	r2, r3, #31
 800104e:	4605      	mov	r5, r0
 8001050:	d4e4      	bmi.n	800101c <_fflush_r+0xc>
 8001052:	89a3      	ldrh	r3, [r4, #12]
 8001054:	059b      	lsls	r3, r3, #22
 8001056:	d4e1      	bmi.n	800101c <_fflush_r+0xc>
 8001058:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800105a:	f7ff fb8d 	bl	8000778 <__retarget_lock_release_recursive>
 800105e:	e7dd      	b.n	800101c <_fflush_r+0xc>

08001060 <__swbuf_r>:
 8001060:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001062:	460e      	mov	r6, r1
 8001064:	4614      	mov	r4, r2
 8001066:	4605      	mov	r5, r0
 8001068:	b118      	cbz	r0, 8001072 <__swbuf_r+0x12>
 800106a:	6a03      	ldr	r3, [r0, #32]
 800106c:	b90b      	cbnz	r3, 8001072 <__swbuf_r+0x12>
 800106e:	f7ff fa7d 	bl	800056c <__sinit>
 8001072:	69a3      	ldr	r3, [r4, #24]
 8001074:	60a3      	str	r3, [r4, #8]
 8001076:	89a3      	ldrh	r3, [r4, #12]
 8001078:	071a      	lsls	r2, r3, #28
 800107a:	d501      	bpl.n	8001080 <__swbuf_r+0x20>
 800107c:	6923      	ldr	r3, [r4, #16]
 800107e:	b943      	cbnz	r3, 8001092 <__swbuf_r+0x32>
 8001080:	4621      	mov	r1, r4
 8001082:	4628      	mov	r0, r5
 8001084:	f000 f82a 	bl	80010dc <__swsetup_r>
 8001088:	b118      	cbz	r0, 8001092 <__swbuf_r+0x32>
 800108a:	f04f 37ff 	mov.w	r7, #4294967295
 800108e:	4638      	mov	r0, r7
 8001090:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001092:	6823      	ldr	r3, [r4, #0]
 8001094:	6922      	ldr	r2, [r4, #16]
 8001096:	1a98      	subs	r0, r3, r2
 8001098:	6963      	ldr	r3, [r4, #20]
 800109a:	b2f6      	uxtb	r6, r6
 800109c:	4283      	cmp	r3, r0
 800109e:	4637      	mov	r7, r6
 80010a0:	dc05      	bgt.n	80010ae <__swbuf_r+0x4e>
 80010a2:	4621      	mov	r1, r4
 80010a4:	4628      	mov	r0, r5
 80010a6:	f7ff ffb3 	bl	8001010 <_fflush_r>
 80010aa:	2800      	cmp	r0, #0
 80010ac:	d1ed      	bne.n	800108a <__swbuf_r+0x2a>
 80010ae:	68a3      	ldr	r3, [r4, #8]
 80010b0:	3b01      	subs	r3, #1
 80010b2:	60a3      	str	r3, [r4, #8]
 80010b4:	6823      	ldr	r3, [r4, #0]
 80010b6:	1c5a      	adds	r2, r3, #1
 80010b8:	6022      	str	r2, [r4, #0]
 80010ba:	701e      	strb	r6, [r3, #0]
 80010bc:	6962      	ldr	r2, [r4, #20]
 80010be:	1c43      	adds	r3, r0, #1
 80010c0:	429a      	cmp	r2, r3
 80010c2:	d004      	beq.n	80010ce <__swbuf_r+0x6e>
 80010c4:	89a3      	ldrh	r3, [r4, #12]
 80010c6:	07db      	lsls	r3, r3, #31
 80010c8:	d5e1      	bpl.n	800108e <__swbuf_r+0x2e>
 80010ca:	2e0a      	cmp	r6, #10
 80010cc:	d1df      	bne.n	800108e <__swbuf_r+0x2e>
 80010ce:	4621      	mov	r1, r4
 80010d0:	4628      	mov	r0, r5
 80010d2:	f7ff ff9d 	bl	8001010 <_fflush_r>
 80010d6:	2800      	cmp	r0, #0
 80010d8:	d0d9      	beq.n	800108e <__swbuf_r+0x2e>
 80010da:	e7d6      	b.n	800108a <__swbuf_r+0x2a>

080010dc <__swsetup_r>:
 80010dc:	b538      	push	{r3, r4, r5, lr}
 80010de:	4b29      	ldr	r3, [pc, #164]	@ (8001184 <__swsetup_r+0xa8>)
 80010e0:	4605      	mov	r5, r0
 80010e2:	6818      	ldr	r0, [r3, #0]
 80010e4:	460c      	mov	r4, r1
 80010e6:	b118      	cbz	r0, 80010f0 <__swsetup_r+0x14>
 80010e8:	6a03      	ldr	r3, [r0, #32]
 80010ea:	b90b      	cbnz	r3, 80010f0 <__swsetup_r+0x14>
 80010ec:	f7ff fa3e 	bl	800056c <__sinit>
 80010f0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010f4:	0719      	lsls	r1, r3, #28
 80010f6:	d422      	bmi.n	800113e <__swsetup_r+0x62>
 80010f8:	06da      	lsls	r2, r3, #27
 80010fa:	d407      	bmi.n	800110c <__swsetup_r+0x30>
 80010fc:	2209      	movs	r2, #9
 80010fe:	602a      	str	r2, [r5, #0]
 8001100:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001104:	81a3      	strh	r3, [r4, #12]
 8001106:	f04f 30ff 	mov.w	r0, #4294967295
 800110a:	e033      	b.n	8001174 <__swsetup_r+0x98>
 800110c:	0758      	lsls	r0, r3, #29
 800110e:	d512      	bpl.n	8001136 <__swsetup_r+0x5a>
 8001110:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001112:	b141      	cbz	r1, 8001126 <__swsetup_r+0x4a>
 8001114:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001118:	4299      	cmp	r1, r3
 800111a:	d002      	beq.n	8001122 <__swsetup_r+0x46>
 800111c:	4628      	mov	r0, r5
 800111e:	f7ff fb2d 	bl	800077c <_free_r>
 8001122:	2300      	movs	r3, #0
 8001124:	6363      	str	r3, [r4, #52]	@ 0x34
 8001126:	89a3      	ldrh	r3, [r4, #12]
 8001128:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800112c:	81a3      	strh	r3, [r4, #12]
 800112e:	2300      	movs	r3, #0
 8001130:	6063      	str	r3, [r4, #4]
 8001132:	6923      	ldr	r3, [r4, #16]
 8001134:	6023      	str	r3, [r4, #0]
 8001136:	89a3      	ldrh	r3, [r4, #12]
 8001138:	f043 0308 	orr.w	r3, r3, #8
 800113c:	81a3      	strh	r3, [r4, #12]
 800113e:	6923      	ldr	r3, [r4, #16]
 8001140:	b94b      	cbnz	r3, 8001156 <__swsetup_r+0x7a>
 8001142:	89a3      	ldrh	r3, [r4, #12]
 8001144:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8001148:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800114c:	d003      	beq.n	8001156 <__swsetup_r+0x7a>
 800114e:	4621      	mov	r1, r4
 8001150:	4628      	mov	r0, r5
 8001152:	f000 f84f 	bl	80011f4 <__smakebuf_r>
 8001156:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800115a:	f013 0201 	ands.w	r2, r3, #1
 800115e:	d00a      	beq.n	8001176 <__swsetup_r+0x9a>
 8001160:	2200      	movs	r2, #0
 8001162:	60a2      	str	r2, [r4, #8]
 8001164:	6962      	ldr	r2, [r4, #20]
 8001166:	4252      	negs	r2, r2
 8001168:	61a2      	str	r2, [r4, #24]
 800116a:	6922      	ldr	r2, [r4, #16]
 800116c:	b942      	cbnz	r2, 8001180 <__swsetup_r+0xa4>
 800116e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8001172:	d1c5      	bne.n	8001100 <__swsetup_r+0x24>
 8001174:	bd38      	pop	{r3, r4, r5, pc}
 8001176:	0799      	lsls	r1, r3, #30
 8001178:	bf58      	it	pl
 800117a:	6962      	ldrpl	r2, [r4, #20]
 800117c:	60a2      	str	r2, [r4, #8]
 800117e:	e7f4      	b.n	800116a <__swsetup_r+0x8e>
 8001180:	2000      	movs	r0, #0
 8001182:	e7f7      	b.n	8001174 <__swsetup_r+0x98>
 8001184:	2000000c 	.word	0x2000000c

08001188 <_sbrk_r>:
 8001188:	b538      	push	{r3, r4, r5, lr}
 800118a:	4d06      	ldr	r5, [pc, #24]	@ (80011a4 <_sbrk_r+0x1c>)
 800118c:	2300      	movs	r3, #0
 800118e:	4604      	mov	r4, r0
 8001190:	4608      	mov	r0, r1
 8001192:	602b      	str	r3, [r5, #0]
 8001194:	f7ff f8fe 	bl	8000394 <_sbrk>
 8001198:	1c43      	adds	r3, r0, #1
 800119a:	d102      	bne.n	80011a2 <_sbrk_r+0x1a>
 800119c:	682b      	ldr	r3, [r5, #0]
 800119e:	b103      	cbz	r3, 80011a2 <_sbrk_r+0x1a>
 80011a0:	6023      	str	r3, [r4, #0]
 80011a2:	bd38      	pop	{r3, r4, r5, pc}
 80011a4:	200001b8 	.word	0x200001b8

080011a8 <__swhatbuf_r>:
 80011a8:	b570      	push	{r4, r5, r6, lr}
 80011aa:	460c      	mov	r4, r1
 80011ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011b0:	2900      	cmp	r1, #0
 80011b2:	b096      	sub	sp, #88	@ 0x58
 80011b4:	4615      	mov	r5, r2
 80011b6:	461e      	mov	r6, r3
 80011b8:	da0d      	bge.n	80011d6 <__swhatbuf_r+0x2e>
 80011ba:	89a3      	ldrh	r3, [r4, #12]
 80011bc:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80011c0:	f04f 0100 	mov.w	r1, #0
 80011c4:	bf14      	ite	ne
 80011c6:	2340      	movne	r3, #64	@ 0x40
 80011c8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80011cc:	2000      	movs	r0, #0
 80011ce:	6031      	str	r1, [r6, #0]
 80011d0:	602b      	str	r3, [r5, #0]
 80011d2:	b016      	add	sp, #88	@ 0x58
 80011d4:	bd70      	pop	{r4, r5, r6, pc}
 80011d6:	466a      	mov	r2, sp
 80011d8:	f000 f848 	bl	800126c <_fstat_r>
 80011dc:	2800      	cmp	r0, #0
 80011de:	dbec      	blt.n	80011ba <__swhatbuf_r+0x12>
 80011e0:	9901      	ldr	r1, [sp, #4]
 80011e2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80011e6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80011ea:	4259      	negs	r1, r3
 80011ec:	4159      	adcs	r1, r3
 80011ee:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80011f2:	e7eb      	b.n	80011cc <__swhatbuf_r+0x24>

080011f4 <__smakebuf_r>:
 80011f4:	898b      	ldrh	r3, [r1, #12]
 80011f6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80011f8:	079d      	lsls	r5, r3, #30
 80011fa:	4606      	mov	r6, r0
 80011fc:	460c      	mov	r4, r1
 80011fe:	d507      	bpl.n	8001210 <__smakebuf_r+0x1c>
 8001200:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001204:	6023      	str	r3, [r4, #0]
 8001206:	6123      	str	r3, [r4, #16]
 8001208:	2301      	movs	r3, #1
 800120a:	6163      	str	r3, [r4, #20]
 800120c:	b003      	add	sp, #12
 800120e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001210:	ab01      	add	r3, sp, #4
 8001212:	466a      	mov	r2, sp
 8001214:	f7ff ffc8 	bl	80011a8 <__swhatbuf_r>
 8001218:	9f00      	ldr	r7, [sp, #0]
 800121a:	4605      	mov	r5, r0
 800121c:	4639      	mov	r1, r7
 800121e:	4630      	mov	r0, r6
 8001220:	f7ff fb18 	bl	8000854 <_malloc_r>
 8001224:	b948      	cbnz	r0, 800123a <__smakebuf_r+0x46>
 8001226:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800122a:	059a      	lsls	r2, r3, #22
 800122c:	d4ee      	bmi.n	800120c <__smakebuf_r+0x18>
 800122e:	f023 0303 	bic.w	r3, r3, #3
 8001232:	f043 0302 	orr.w	r3, r3, #2
 8001236:	81a3      	strh	r3, [r4, #12]
 8001238:	e7e2      	b.n	8001200 <__smakebuf_r+0xc>
 800123a:	89a3      	ldrh	r3, [r4, #12]
 800123c:	6020      	str	r0, [r4, #0]
 800123e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001242:	81a3      	strh	r3, [r4, #12]
 8001244:	9b01      	ldr	r3, [sp, #4]
 8001246:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800124a:	b15b      	cbz	r3, 8001264 <__smakebuf_r+0x70>
 800124c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001250:	4630      	mov	r0, r6
 8001252:	f000 f81d 	bl	8001290 <_isatty_r>
 8001256:	b128      	cbz	r0, 8001264 <__smakebuf_r+0x70>
 8001258:	89a3      	ldrh	r3, [r4, #12]
 800125a:	f023 0303 	bic.w	r3, r3, #3
 800125e:	f043 0301 	orr.w	r3, r3, #1
 8001262:	81a3      	strh	r3, [r4, #12]
 8001264:	89a3      	ldrh	r3, [r4, #12]
 8001266:	431d      	orrs	r5, r3
 8001268:	81a5      	strh	r5, [r4, #12]
 800126a:	e7cf      	b.n	800120c <__smakebuf_r+0x18>

0800126c <_fstat_r>:
 800126c:	b538      	push	{r3, r4, r5, lr}
 800126e:	4d07      	ldr	r5, [pc, #28]	@ (800128c <_fstat_r+0x20>)
 8001270:	2300      	movs	r3, #0
 8001272:	4604      	mov	r4, r0
 8001274:	4608      	mov	r0, r1
 8001276:	4611      	mov	r1, r2
 8001278:	602b      	str	r3, [r5, #0]
 800127a:	f7ff f862 	bl	8000342 <_fstat>
 800127e:	1c43      	adds	r3, r0, #1
 8001280:	d102      	bne.n	8001288 <_fstat_r+0x1c>
 8001282:	682b      	ldr	r3, [r5, #0]
 8001284:	b103      	cbz	r3, 8001288 <_fstat_r+0x1c>
 8001286:	6023      	str	r3, [r4, #0]
 8001288:	bd38      	pop	{r3, r4, r5, pc}
 800128a:	bf00      	nop
 800128c:	200001b8 	.word	0x200001b8

08001290 <_isatty_r>:
 8001290:	b538      	push	{r3, r4, r5, lr}
 8001292:	4d06      	ldr	r5, [pc, #24]	@ (80012ac <_isatty_r+0x1c>)
 8001294:	2300      	movs	r3, #0
 8001296:	4604      	mov	r4, r0
 8001298:	4608      	mov	r0, r1
 800129a:	602b      	str	r3, [r5, #0]
 800129c:	f7ff f861 	bl	8000362 <_isatty>
 80012a0:	1c43      	adds	r3, r0, #1
 80012a2:	d102      	bne.n	80012aa <_isatty_r+0x1a>
 80012a4:	682b      	ldr	r3, [r5, #0]
 80012a6:	b103      	cbz	r3, 80012aa <_isatty_r+0x1a>
 80012a8:	6023      	str	r3, [r4, #0]
 80012aa:	bd38      	pop	{r3, r4, r5, pc}
 80012ac:	200001b8 	.word	0x200001b8

080012b0 <_init>:
 80012b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012b2:	bf00      	nop
 80012b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012b6:	bc08      	pop	{r3}
 80012b8:	469e      	mov	lr, r3
 80012ba:	4770      	bx	lr

080012bc <_fini>:
 80012bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012be:	bf00      	nop
 80012c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012c2:	bc08      	pop	{r3}
 80012c4:	469e      	mov	lr, r3
 80012c6:	4770      	bx	lr
